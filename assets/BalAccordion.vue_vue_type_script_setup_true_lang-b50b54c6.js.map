{"version":3,"file":"BalAccordion.vue_vue_type_script_setup_true_lang-b50b54c6.js","sources":["../../src/components/_global/BalAccordion/BalAccordion.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\ntype Section = {\r\n  title: string;\r\n  id: string;\r\n  // custom renderer slot id for handle\r\n  handle?: string;\r\n  // prevent this accordion section from\r\n  // being expanded\r\n  isDisabled?: boolean;\r\n};\r\n\r\ntype Props = {\r\n  sections: Section[];\r\n  // changing variables which can be used to\r\n  // determine whether to re-render the height\r\n  // of an accordion section\r\n  dependencies?: unknown;\r\n  showSectionBorder?: boolean;\r\n  reCalcKey?: number;\r\n};\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  showSectionBorder: true,\r\n  reCalcKey: 0,\r\n});\r\n\r\nconst activeSection = ref('');\r\nconst activeSectionElement = ref<HTMLElement>();\r\nconst accordionHeightSetterElement = ref<HTMLElement>();\r\nconst wrapperElement = ref<HTMLElement>();\r\nconst handleBarElement = ref<HTMLElement>();\r\nconst handleBarElements = ref<(Element | ComponentPublicInstance)[]>([]);\r\n\r\nconst minimisedWrapperHeight = ref(0);\r\nconst isContentVisible = ref(false);\r\nconst height = ref();\r\nconst handleBarHeight = ref(0);\r\nconst totalHeight = ref(0);\r\n\r\nasync function toggleSection(section: string, collapse = true) {\r\n  const _section = props.sections.find(s => s.id === section);\r\n  if (_section?.isDisabled) return;\r\n\r\n  const collapseCurrentSection = activeSection.value === section && collapse;\r\n\r\n  if (collapseCurrentSection) {\r\n    activeSection.value = '';\r\n    isContentVisible.value = false;\r\n  } else {\r\n    activeSection.value = section;\r\n    isContentVisible.value = true;\r\n  }\r\n  await nextTick();\r\n\r\n  if (activeSectionElement.value && accordionHeightSetterElement.value) {\r\n    height.value = activeSectionElement.value.clientHeight;\r\n    isContentVisible.value = false;\r\n  }\r\n\r\n  isContentVisible.value = true;\r\n}\r\n\r\n// all of this happens without the user seeing any feedback\r\nonMounted(async () => {\r\n  // set to true so we can actually measure the content height\r\n  isContentVisible.value = true;\r\n\r\n  // set the height of the minimised accordion\r\n  minimisedWrapperHeight.value = wrapperElement.value?.offsetHeight || 0;\r\n\r\n  handleBarHeight.value = handleBarElement.value?.offsetHeight || 0;\r\n\r\n  // the total expanded height starts with tracking the minimised height first\r\n  totalHeight.value = wrapperElement.value?.offsetHeight || 0;\r\n\r\n  // calculating the height of the completely expanded accordion\r\n  // by summing the heights of each section onto the minimised\r\n  // height of the accordion\r\n  for (const section of props.sections) {\r\n    activeSection.value = section.id;\r\n    await nextTick();\r\n    totalHeight.value =\r\n      totalHeight.value + (activeSectionElement.value?.offsetHeight || 0);\r\n  }\r\n\r\n  // need to set this back to false so its like the accordion\r\n  // was never active\r\n  activeSection.value = '';\r\n  isContentVisible.value = false;\r\n});\r\n\r\nfunction setHandleBars(el: Element | ComponentPublicInstance | null) {\r\n  if (!el) return;\r\n  if (!handleBarElements.value?.includes(el)) {\r\n    handleBarElements.value.push(el);\r\n  }\r\n}\r\n\r\n/**\r\n * WATCHERS\r\n */\r\nwatch(\r\n  () => props.dependencies,\r\n  () => {\r\n    toggleSection(activeSection.value, false);\r\n  }\r\n);\r\n\r\nwatch(\r\n  () => props.reCalcKey,\r\n  newVal => {\r\n    if (newVal && activeSection.value) {\r\n      toggleSection(activeSection.value, false);\r\n    }\r\n  }\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div ref=\"wrapperElement\">\r\n    <BalCard hFull noPad shadow=\"none\" class=\"overflow-visible rounded-xl\">\r\n      <div\r\n        v-for=\"(section, i) in sections\"\r\n        :key=\"section.id\"\r\n        :ref=\"setHandleBars\"\r\n        class=\"flex flex-col\"\r\n      >\r\n        <div\r\n          v-if=\"section.handle\"\r\n          ref=\"handleBarElement\"\r\n          @click=\"toggleSection(section.id)\"\r\n        >\r\n          <slot :name=\"section.handle\" />\r\n        </div>\r\n        <button\r\n          v-else\r\n          ref=\"handleBarElement\"\r\n          :class=\"[\r\n            'transition-all w-full flex justify-between p-3 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-xl',\r\n            {\r\n              'border-b dark:border-gray-900': i !== sections.length - 1,\r\n            },\r\n          ]\"\r\n          @click=\"toggleSection(section.id)\"\r\n        >\r\n          <h6>{{ section.title }}</h6>\r\n          <BalIcon\r\n            class=\"text-blue-400\"\r\n            :class=\"[\r\n              activeSection === section.id ? '-rotate-180' : 'rotate-0',\r\n              'transform transition-all',\r\n            ]\"\r\n            name=\"chevron-down\"\r\n          />\r\n        </button>\r\n        <div\r\n          v-if=\"activeSection === section.id\"\r\n          ref=\"accordionHeightSetterElement\"\r\n          class=\"relative\"\r\n        >\r\n          <!-- content -->\r\n          <div\r\n            v-if=\"isContentVisible\"\r\n            ref=\"activeSectionElement\"\r\n            :class=\"{\r\n              'border-b dark:border-gray-900 active-section rounded-b':\r\n                isContentVisible && showSectionBorder,\r\n            }\"\r\n          >\r\n            <slot :name=\"section.id\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </BalCard>\r\n  </div>\r\n</template>\r\n"],"names":["activeSection","ref","activeSectionElement","accordionHeightSetterElement","wrapperElement","handleBarElement","handleBarElements","minimisedWrapperHeight","isContentVisible","height","handleBarHeight","totalHeight","toggleSection","section","collapse","_section","props","s","nextTick","onMounted","_a","_b","_c","_d","setHandleBars","el","watch","newVal"],"mappings":"6VA0BAA,EAAAC,EAAA,EAAA,EACAC,EAAAD,IACAE,EAAAF,IACAG,EAAAH,IACAI,EAAAJ,IACAK,EAAAL,EAAA,CAAA,CAAA,EAEAM,EAAAN,EAAA,CAAA,EACAO,EAAAP,EAAA,EAAA,EACAQ,EAAAR,IACAS,EAAAT,EAAA,CAAA,EACAU,EAAAV,EAAA,CAAA,EAEA,eAAAW,EAAAC,EAAAC,EAAA,GAAA,CACE,MAAAC,EAAAC,EAAA,SAAA,KAAAC,GAAAA,EAAA,KAAAJ,CAAA,EACA,GAAAE,GAAA,MAAAA,EAAA,WAA0B,OAE1Bf,EAAA,QAAAa,GAAAC,GAGEd,EAAA,MAAA,GACAQ,EAAA,MAAA,KAEAR,EAAA,MAAAa,EACAL,EAAA,MAAA,IAEF,MAAAU,EAAA,EAEAhB,EAAA,OAAAC,EAAA,QACEM,EAAA,MAAAP,EAAA,MAAA,aACAM,EAAA,MAAA,IAGFA,EAAA,MAAA,EAAyB,CAI3BW,EAAA,SAAA,aAEEX,EAAA,MAAA,GAGAD,EAAA,QAAAa,EAAAhB,EAAA,QAAA,YAAAgB,EAAA,eAAA,EAEAV,EAAA,QAAAW,EAAAhB,EAAA,QAAA,YAAAgB,EAAA,eAAA,EAGAV,EAAA,QAAAW,EAAAlB,EAAA,QAAA,YAAAkB,EAAA,eAAA,EAKA,UAAAT,KAAAG,EAAA,SACEhB,EAAA,MAAAa,EAAA,GACA,MAAAK,EAAA,EACAP,EAAA,MAAAA,EAAA,SAAAY,EAAArB,EAAA,QAAA,YAAAqB,EAAA,eAAA,GAMFvB,EAAA,MAAA,GACAQ,EAAA,MAAA,EAAyB,CAAA,EAG3B,SAAAgB,EAAAC,EAAA,OACEA,KACAL,EAAAd,EAAA,QAAA,MAAAc,EAAA,SAAAK,IACEnB,EAAA,MAAA,KAAAmB,CAAA,EACF,CAMF,OAAAC,EAAA,IAAAV,EAAA,aACc,IAAA,CAEVJ,EAAAZ,EAAA,MAAA,EAAA,CAAwC,CAC1C,EAGF0B,EAAA,IAAAV,EAAA,UACcW,GAAA,CAEVA,GAAA3B,EAAA,OACEY,EAAAZ,EAAA,MAAA,EAAA,CACF,CACF"}