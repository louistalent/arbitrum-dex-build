{"version":3,"file":"useTokenHelpers-ddc69531.js","sources":["../../src/composables/useTokenHelpers.ts"],"sourcesContent":["import { getAddress } from '@ethersproject/address';\r\nimport { computed } from 'vue';\r\n\r\nimport { TOKENS } from '@/constants/tokens';\r\nimport { isSameAddress } from '@/lib/utils';\r\nimport { TokenInfo } from '@/types/TokenList';\r\n\r\nimport { useTokens } from '@/providers/tokens.provider';\r\n\r\nconst balAddress = getAddress(TOKENS.Addresses.BAL);\r\n\r\nfunction isBalAddress(address: string): boolean {\r\n  return isSameAddress(address, balAddress);\r\n}\r\n\r\nexport function useTokenHelpers() {\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { getToken, wrappedNativeAsset, nativeAsset } = useTokens();\r\n\r\n  /**\r\n   * COMPUTED\r\n   */\r\n  const balToken = computed((): TokenInfo => getToken(balAddress));\r\n\r\n  /**\r\n   * METHODS\r\n   */\r\n  function replaceWethWithEth(addresses: string[]): string[] {\r\n    return addresses.map(address => {\r\n      if (isSameAddress(address, wrappedNativeAsset.value.address)) {\r\n        return nativeAsset.address;\r\n      }\r\n      return address;\r\n    });\r\n  }\r\n\r\n  return {\r\n    // computed\r\n    balAddress,\r\n    balToken,\r\n    // methods\r\n    isBalAddress,\r\n    replaceWethWithEth,\r\n  };\r\n}\r\n"],"names":["balAddress","getAddress","TOKENS","isBalAddress","address","isSameAddress","useTokenHelpers","getToken","wrappedNativeAsset","nativeAsset","useTokens","balToken","computed","replaceWethWithEth","addresses"],"mappings":"qEASA,MAAMA,EAAaC,EAAWC,EAAO,UAAU,GAAG,EAElD,SAASC,EAAaC,EAA0B,CACvC,OAAAC,EAAcD,EAASJ,CAAU,CAC1C,CAEO,SAASM,GAAkB,CAIhC,KAAM,CAAE,SAAAC,EAAU,mBAAAC,EAAoB,YAAAC,GAAgBC,EAAU,EAK1DC,EAAWC,EAAS,IAAiBL,EAASP,CAAU,CAAC,EAK/D,SAASa,EAAmBC,EAA+B,CAClD,OAAAA,EAAU,IAAeV,GAC1BC,EAAcD,EAASI,EAAmB,MAAM,OAAO,EAClDC,EAAY,QAEdL,CACR,CACH,CAEO,MAAA,CAEL,WAAAJ,EACA,SAAAW,EAEA,aAAAR,EACA,mBAAAU,CAAA,CAEJ"}