{"version":3,"file":"useSwapState-8cdb4cec.js","sources":["../../src/composables/swap/useSwapState.ts"],"sourcesContent":["import { reactive, toRefs } from 'vue';\r\n\r\n// globals\r\nconst swapState = reactive({\r\n  initialized: false,\r\n  tokenInAddress: '',\r\n  tokenOutAddress: '',\r\n  tokenInAmount: '',\r\n  tokenOutAmount: '',\r\n});\r\n\r\nfunction setInitialized(val: boolean) {\r\n  swapState.initialized = val;\r\n}\r\n\r\nfunction setTokenInAddress(address: string) {\r\n  swapState.tokenInAddress = address;\r\n}\r\nfunction setTokenOutAddress(address: string) {\r\n  swapState.tokenOutAddress = address;\r\n}\r\n\r\nfunction setTokenInAmount(amount: string) {\r\n  swapState.tokenInAmount = amount;\r\n}\r\nfunction setTokenOutAmount(amount: string) {\r\n  swapState.tokenOutAmount = amount;\r\n}\r\n\r\nexport function useSwapState() {\r\n  return {\r\n    // can't set to read only refs as these vars are used as\r\n    // model values\r\n    ...toRefs(swapState),\r\n    setTokenInAddress,\r\n    setTokenOutAddress,\r\n    setTokenInAmount,\r\n    setTokenOutAmount,\r\n    setInitialized,\r\n  };\r\n}\r\n"],"names":["swapState","reactive","setInitialized","val","setTokenInAddress","address","setTokenOutAddress","setTokenInAmount","amount","setTokenOutAmount","useSwapState","toRefs"],"mappings":"2CAGA,MAAMA,EAAYC,EAAS,CACzB,YAAa,GACb,eAAgB,GAChB,gBAAiB,GACjB,cAAe,GACf,eAAgB,EAClB,CAAC,EAED,SAASC,EAAeC,EAAc,CACpCH,EAAU,YAAcG,CAC1B,CAEA,SAASC,EAAkBC,EAAiB,CAC1CL,EAAU,eAAiBK,CAC7B,CACA,SAASC,EAAmBD,EAAiB,CAC3CL,EAAU,gBAAkBK,CAC9B,CAEA,SAASE,EAAiBC,EAAgB,CACxCR,EAAU,cAAgBQ,CAC5B,CACA,SAASC,EAAkBD,EAAgB,CACzCR,EAAU,eAAiBQ,CAC7B,CAEO,SAASE,GAAe,CACtB,MAAA,CAGL,GAAGC,EAAOX,CAAS,EACnB,kBAAAI,EACA,mBAAAE,EACA,iBAAAC,EACA,kBAAAE,EACA,eAAAP,CAAA,CAEJ"}