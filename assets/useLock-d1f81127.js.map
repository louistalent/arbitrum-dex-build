{"version":3,"file":"useLock-d1f81127.js","sources":["../../src/components/_global/BalChip/composables/useChipStyles.ts","../../src/components/_global/BalChip/BalChip.vue","../../src/composables/useLock.ts"],"sourcesContent":["export function useChipClasses(props) {\r\n  const sizeClasses = () => {\r\n    switch (props.size) {\r\n      case 'sm':\r\n        return 'p-1 text-xs';\r\n      case 'lg':\r\n        return 'p-2 text-base';\r\n      default:\r\n        return 'p-1 text-sm';\r\n    }\r\n  };\r\n\r\n  const bgColorClasses = (): string => {\r\n    if (props.color === 'gradient')\r\n      return 'text-white bg-gradient-to-tr from-blue-500 to-pink-500';\r\n    if (props.color === 'white') return 'bg-white dark:bg-gray-900';\r\n    if (props.color === 'red') return 'text-white bg-red-500';\r\n    if (props.color === 'orange') return 'text-black bg-orange-300';\r\n    if (props.color === 'amber') return 'text-black bg-orange-500';\r\n\r\n    return `bg-${props.color}-100 dark:bg-${props.color}-800`;\r\n  };\r\n\r\n  const outlineClasses = (): string => {\r\n    if (props.outline) {\r\n      return `border-gray-100 dark:border-gray-900 border shadow-lg`;\r\n    }\r\n    return 'shadow-lg';\r\n  };\r\n\r\n  const shapeClasses = () => {\r\n    if (props.rounded) return 'rounded-full';\r\n    return 'rounded';\r\n  };\r\n\r\n  return computed(() => {\r\n    return {\r\n      [sizeClasses()]: true,\r\n      [bgColorClasses()]: true,\r\n      [outlineClasses()]: true,\r\n      [shapeClasses()]: true,\r\n    };\r\n  });\r\n}\r\n\r\nexport function useCloseIconClasses(props) {\r\n  const isGradient = props.color === 'gradient';\r\n  const colorClass = isGradient ? 'text-white' : `text-${props.color}-500`;\r\n\r\n  const classes = computed(() => {\r\n    return {\r\n      [colorClass]: true,\r\n    };\r\n  });\r\n\r\n  const iconSize = computed(() => {\r\n    switch (props.size) {\r\n      case 'sm':\r\n        return 'xxs';\r\n      case 'lg':\r\n        return 'sm';\r\n      default:\r\n        return 'xs';\r\n    }\r\n  });\r\n\r\n  return { classes, iconSize };\r\n}\r\n","<script setup lang=\"ts\">\r\nimport BalIcon from '../BalIcon/BalIcon.vue';\r\nimport {\r\n  useChipClasses,\r\n  useCloseIconClasses,\r\n} from './composables/useChipStyles';\r\n\r\ntype Props = {\r\n  label?: string;\r\n  closeable?: boolean;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  color?: 'gray' | 'gradient' | 'white' | 'red' | 'orange' | 'amber';\r\n  outline?: boolean;\r\n  rounded?: boolean;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  label: '',\r\n  closeable: false,\r\n  size: 'md',\r\n  color: 'gray',\r\n  rounded: false,\r\n  outline: true,\r\n});\r\n\r\nconst emit = defineEmits(['closed']);\r\n\r\nconst classes = useChipClasses(props);\r\nconst { classes: iconClasses, iconSize } = useCloseIconClasses(props);\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"['bal-chip', classes]\">\r\n    <div class=\"content-container\">\r\n      <span v-if=\"label\">\r\n        {{ label }}\r\n      </span>\r\n      <slot v-else />\r\n      <div v-if=\"closeable\" @click=\"emit('closed')\">\r\n        <BalIcon name=\"x\" :size=\"iconSize\" :class=\"['close', iconClasses]\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.bal-chip {\r\n  @apply inline-block whitespace-nowrap;\r\n}\r\n\r\n.content-container {\r\n  @apply flex items-center leading-none h-full;\r\n}\r\n\r\n.close {\r\n  @apply cursor-pointer ml-1 -mb-px text-gray-400;\r\n}\r\n</style>\r\n","import { Pool } from '@/services/pool/types';\r\nimport { TokenInfo } from '@/types/TokenList';\r\n\r\nimport { useTokens } from '@/providers/tokens.provider';\r\nimport { useUserData } from '@/providers/user-data.provider';\r\nimport usePoolQuery from './queries/usePoolQuery';\r\nimport { isL2 } from './useNetwork';\r\nimport { fiatValueOf } from './usePool';\r\nimport useVeBal from './useVeBAL';\r\n\r\ninterface Options {\r\n  enabled?: boolean;\r\n}\r\nexport function useLock({ enabled = true }: Options = {}) {\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { lockablePoolId } = useVeBal();\r\n  const { getToken } = useTokens();\r\n\r\n  /**\r\n   * QUERIES\r\n   */\r\n  const shouldFetchLockPool = computed((): boolean => !isL2.value && enabled);\r\n  const lockPoolQuery = usePoolQuery(\r\n    lockablePoolId.value as string,\r\n    shouldFetchLockPool\r\n  );\r\n  const { lockQuery } = useUserData();\r\n\r\n  /**\r\n   * COMPUTED\r\n   */\r\n  const isLoadingLockPool = computed(\r\n    (): boolean => lockPoolQuery.isLoading.value\r\n  );\r\n\r\n  const isLoadingLockInfo = computed((): boolean => lockQuery.isLoading.value);\r\n\r\n  const isLoadingLock = computed(\r\n    (): boolean => isLoadingLockPool.value || isLoadingLockInfo.value\r\n  );\r\n\r\n  const lockPool = computed<Pool | undefined>(() => lockPoolQuery.data.value);\r\n\r\n  const lockPoolToken = computed((): TokenInfo | null =>\r\n    lockPool.value != null ? getToken(lockPool.value.address) : null\r\n  );\r\n\r\n  const lock = computed(() => lockQuery.data.value);\r\n\r\n  // Total fiat value of locked tokens.\r\n  const totalLockedValue = computed((): string =>\r\n    lockPool.value && lock.value?.hasExistingLock\r\n      ? fiatValueOf(lockPool.value, lock.value.lockedAmount)\r\n      : '0'\r\n  );\r\n\r\n  // Total locked shares (veBAL).\r\n  const totalLockedShares = computed((): string =>\r\n    lockPool.value && lock.value?.hasExistingLock\r\n      ? lock.value.lockedAmount\r\n      : '0'\r\n  );\r\n\r\n  return {\r\n    isLoadingLockPool,\r\n    isLoadingLockInfo,\r\n    isLoadingLock,\r\n    lockPoolToken,\r\n    lockPool,\r\n    lock,\r\n    totalLockedValue,\r\n    totalLockedShares,\r\n  };\r\n}\r\n"],"names":["useChipClasses","props","sizeClasses","bgColorClasses","outlineClasses","shapeClasses","computed","useCloseIconClasses","colorClass","classes","iconSize","iconClasses","useLock","enabled","lockablePoolId","useVeBal","getToken","useTokens","shouldFetchLockPool","isL2","lockPoolQuery","usePoolQuery","lockQuery","useUserData","isLoadingLockPool","isLoadingLockInfo","isLoadingLock","lockPool","lockPoolToken","lock","totalLockedValue","_a","fiatValueOf","totalLockedShares"],"mappings":"6OAAO,SAAAA,EAAAC,EAAA,CACL,MAAAC,EAAA,IAAA,CACE,OAAAD,EAAA,KAAA,CAAoB,IAAA,KAEhB,MAAA,cAAO,IAAA,KAEP,MAAA,gBAAO,QAEP,MAAA,aAAO,CACX,EAGFE,EAAA,IACEF,EAAA,QAAA,WACE,yDACFA,EAAA,QAAA,QAA6B,4BAC7BA,EAAA,QAAA,MAA2B,wBAC3BA,EAAA,QAAA,SAA8B,2BAC9BA,EAAA,QAAA,QAA6B,2BAE7B,MAAAA,EAAA,qBAAAA,EAAA,YAGFG,EAAA,IACEH,EAAA,QACE,wDAEF,YAGFI,EAAA,IACEJ,EAAA,QAAmB,eACnB,UAGF,OAAAK,EAAA,KACE,CAAO,CAAAJ,EAAA,CAAA,EAAA,GACY,CAAAC,EAAA,CAAA,EAAA,GACG,CAAAC,EAAA,CAAA,EAAA,GACA,CAAAC,EAAA,CAAA,EAAA,EACF,EACpB,CAEJ,CAEO,SAAAE,EAAAN,EAAA,CAEL,MAAAO,EADAP,EAAA,QAAA,WACA,aAAA,QAAAA,EAAA,YAEAQ,EAAAH,EAAA,KACE,CAAO,CAAAE,CAAA,EAAA,EACS,EAChB,EAGFE,EAAAJ,EAAA,IAAA,CACE,OAAAL,EAAA,KAAA,CAAoB,IAAA,KAEhB,MAAA,MAAO,IAAA,KAEP,MAAA,KAAO,QAEP,MAAA,IAAO,CACX,CAAA,EAGF,MAAA,CAAA,QAAAQ,EAAA,SAAAC,EACF,gSCrCAD,EAAAT,EAAAC,CAAA,EACA,CAAA,QAAAU,EAAA,SAAAD,CAAA,EAAAH,EAAAN,CAAA,8jBClBO,SAAAW,EAAA,CAAA,QAAAC,EAAA,EAAA,EAAA,CAAA,EAAA,CAIL,KAAA,CAAA,eAAAC,GAAAC,IACA,CAAA,SAAAC,GAAAC,IAKAC,EAAAZ,EAAA,IAAA,CAAAa,EAAA,OAAAN,CAAA,EACAO,EAAAC,EAAsBP,EAAA,MACLI,CACf,EAEF,CAAA,UAAAI,GAAAC,IAKAC,EAAAlB,EAA0B,IAAAc,EAAA,UAAA,KACe,EAGzCK,EAAAnB,EAAA,IAAAgB,EAAA,UAAA,KAAA,EAEAI,EAAApB,EAAsB,IAAAkB,EAAA,OAAAC,EAAA,KACwC,EAG9DE,EAAArB,EAAA,IAAAc,EAAA,KAAA,KAAA,EAEAQ,EAAAtB,EAAsB,IAAAqB,EAAA,OAAA,KAAAX,EAAAW,EAAA,MAAA,OAAA,EAAA,IACwC,EAG9DE,EAAAvB,EAAA,IAAAgB,EAAA,KAAA,KAAA,EAGAQ,EAAAxB,EAAyB,IAAA,OAAA,OAAAqB,EAAA,SAAAI,EAAAF,EAAA,QAAA,MAAAE,EAAA,iBAAAC,EAAAL,EAAA,MAAAE,EAAA,MAAA,YAAA,EAAA,IAGnB,EAINI,EAAA3B,EAA0B,WAAA,OAAAqB,EAAA,SAAAI,EAAAF,EAAA,QAAA,MAAAE,EAAA,iBAAAF,EAAA,MAAA,aAAA,IAGpB,EAGN,MAAA,CAAO,kBAAAL,EACL,kBAAAC,EACA,cAAAC,EACA,cAAAE,EACA,SAAAD,EACA,KAAAE,EACA,iBAAAC,EACA,kBAAAG,CACA,CAEJ"}