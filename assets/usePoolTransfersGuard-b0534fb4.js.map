{"version":3,"file":"usePoolTransfersGuard-b0534fb4.js","sources":["../../src/composables/queries/usePoolDecorationQuery.ts","../../src/composables/contextual/pool-transfers/usePoolTransfers.ts","../../src/composables/useTxState.ts","../../node_modules/debounce-promise/dist/index.js","../../src/components/forms/pool_actions/shared/TokenAmounts.vue","../../src/composables/contextual/pool-transfers/usePoolTransfersGuard.ts"],"sourcesContent":["import { reactive } from 'vue';\r\nimport { useQuery, UseQueryOptions } from '@tanstack/vue-query';\r\nimport { Pool } from '@/services/pool/types';\r\nimport QUERY_KEYS from '@/constants/queryKeys';\r\nimport { PoolDecorator } from '@/services/pool/decorators/pool.decorator';\r\nimport { useTokens } from '@/providers/tokens.provider';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype QueryResponse = Pool | undefined;\r\ntype QueryOptions = UseQueryOptions<QueryResponse>;\r\n\r\n/**\r\n * Given a pool, uses PoolDecorator to fetch onchain attributes such as token\r\n * balances and totalSupply to make sure they're as up to date as possible and\r\n * returns a decorated pool object with those live values.\r\n */\r\nexport default function usePoolDecorationQuery(\r\n  pool: Ref<Pool | undefined>,\r\n  options: QueryOptions = {}\r\n) {\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { tokens } = useTokens();\r\n\r\n  /**\r\n   * COMPUTED\r\n   */\r\n  const poolId = computed((): string | undefined => pool.value?.id);\r\n\r\n  const queryKey = reactive(QUERY_KEYS.Pool.Decorated(poolId));\r\n\r\n  const enabled = computed((): boolean => !!pool.value);\r\n\r\n  /**\r\n   * QUERY FUNCTION\r\n   */\r\n  const queryFn = async () => {\r\n    if (!pool.value) return undefined;\r\n    const _pool = cloneDeep(pool.value);\r\n    const poolDecorator = new PoolDecorator([_pool]);\r\n    // Decorate pool updating only the onchain attributes.\r\n    const [decoratedPool] = await poolDecorator.decorate(tokens.value, false);\r\n    return decoratedPool;\r\n  };\r\n\r\n  /**\r\n   * QUERY OPTIONS\r\n   */\r\n  const queryOptions = reactive({\r\n    enabled,\r\n    ...options,\r\n  });\r\n\r\n  return useQuery<QueryResponse>(\r\n    queryKey,\r\n    queryFn,\r\n    queryOptions as QueryOptions\r\n  );\r\n}\r\n","import { computed, ref } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\n// Composables\r\nimport usePoolQuery from '@/composables/queries/usePoolQuery';\r\nimport { isDeep, tokensListExclBpt } from '@/composables/usePool';\r\nimport { useTokens } from '@/providers/tokens.provider';\r\nimport { includesAddress } from '@/lib/utils';\r\nimport { Pool } from '@/services/pool/types';\r\nimport { isQueryLoading } from '@/composables/queries/useQueryHelpers';\r\nimport usePoolDecorationQuery from '@/composables/queries/usePoolDecorationQuery';\r\n\r\n/**\r\n * STATE\r\n */\r\nconst useNativeAsset = ref(false);\r\nconst transfersAllowed = ref(true);\r\n\r\nexport default function usePoolTransfers() {\r\n  const route = useRoute();\r\n  const id = (route.params.id as string).toLowerCase();\r\n\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { prices } = useTokens();\r\n\r\n  /**\r\n   * QUERIES\r\n   */\r\n  const poolQuery = usePoolQuery(id);\r\n\r\n  /**\r\n   * COMPUTED\r\n   */\r\n  const initialPool = computed((): Pool | undefined => {\r\n    return poolQuery.data.value;\r\n  });\r\n\r\n  const poolDecorationQuery = usePoolDecorationQuery(initialPool);\r\n\r\n  const poolQueryLoading = computed((): boolean => isQueryLoading(poolQuery));\r\n\r\n  const loadingPool = computed(\r\n    (): boolean => poolQueryLoading.value || !initialPool.value\r\n  );\r\n\r\n  const pool = computed((): Pool | undefined => {\r\n    return poolDecorationQuery.data.value || initialPool.value;\r\n  });\r\n\r\n  const tokenAddresses = computed(() => {\r\n    if (initialPool.value) {\r\n      if (isDeep(initialPool.value)) {\r\n        return initialPool.value.mainTokens || [];\r\n      }\r\n      return tokensListExclBpt(initialPool.value);\r\n    }\r\n    return [];\r\n  });\r\n\r\n  const missingPrices = computed(() => {\r\n    const tokensWithPrice = Object.keys(prices.value).map(t => t.toLowerCase());\r\n    return !tokenAddresses.value.every(token =>\r\n      includesAddress(tokensWithPrice, token)\r\n    );\r\n  });\r\n\r\n  return {\r\n    pool,\r\n    poolQuery,\r\n    poolDecorationQuery,\r\n    loadingPool,\r\n    useNativeAsset,\r\n    missingPrices,\r\n    transfersAllowed,\r\n  };\r\n}\r\n","import { TransactionReceipt } from '@ethersproject/abstract-provider';\r\nimport { computed, reactive } from 'vue';\r\n\r\nexport type TxState = {\r\n  init: boolean;\r\n  confirming: boolean;\r\n  confirmed: boolean;\r\n  confirmedAt: string;\r\n  receipt?: TransactionReceipt;\r\n};\r\n\r\n/**\r\n * Composable for managing the state of a transaction.\r\n */\r\nexport function useTxState() {\r\n  const txState = reactive<TxState>({\r\n    init: false,\r\n    confirming: false,\r\n    confirmed: false,\r\n    confirmedAt: '',\r\n  });\r\n\r\n  const txInProgress = computed(\r\n    (): boolean => txState.init || txState.confirming || txState.confirmed\r\n  );\r\n\r\n  function resetTxState(): void {\r\n    Object.assign(txState, {\r\n      init: false,\r\n      confirming: false,\r\n      confirmed: false,\r\n      confirmedAt: '',\r\n    });\r\n  }\r\n\r\n  return { txState, txInProgress, resetTxState };\r\n}\r\n","'use strict';\n\n/* global setTimeout, clearTimeout */\n\nmodule.exports = function debounce(fn) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var lastCallAt = void 0;\n  var deferred = void 0;\n  var timer = void 0;\n  var pendingArgs = [];\n  return function debounced() {\n    var currentWait = getWait(wait);\n    var currentTime = new Date().getTime();\n\n    var isCold = !lastCallAt || currentTime - lastCallAt > currentWait;\n\n    lastCallAt = currentTime;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (isCold && options.leading) {\n      return options.accumulate ? Promise.resolve(fn.call(this, [args])).then(function (result) {\n        return result[0];\n      }) : Promise.resolve(fn.call.apply(fn, [this].concat(args)));\n    }\n\n    if (deferred) {\n      clearTimeout(timer);\n    } else {\n      deferred = defer();\n    }\n\n    pendingArgs.push(args);\n    timer = setTimeout(flush.bind(this), currentWait);\n\n    if (options.accumulate) {\n      var argsIndex = pendingArgs.length - 1;\n      return deferred.promise.then(function (results) {\n        return results[argsIndex];\n      });\n    }\n\n    return deferred.promise;\n  };\n\n  function flush() {\n    var thisDeferred = deferred;\n    clearTimeout(timer);\n\n    Promise.resolve(options.accumulate ? fn.call(this, pendingArgs) : fn.apply(this, pendingArgs[pendingArgs.length - 1])).then(thisDeferred.resolve, thisDeferred.reject);\n\n    pendingArgs = [];\n    deferred = null;\n  }\n};\n\nfunction getWait(wait) {\n  return typeof wait === 'function' ? wait() : wait;\n}\n\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n//# sourceMappingURL=index.js.map","<script setup lang=\"ts\">\r\nimport { groupBy, orderBy } from 'lodash';\r\nimport { computed } from 'vue';\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\nimport { bnum } from '@/lib/utils';\r\nimport { TokenInfoMap } from '@/types/TokenList';\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  amountMap: AmountMap;\r\n  fiatAmountMap: AmountMap;\r\n  tokenMap: TokenInfoMap;\r\n  fiatTotal: string;\r\n  title?: string;\r\n  hideAmountShare?: boolean;\r\n  showZeroAmounts?: boolean;\r\n};\r\ntype AmountMap = {\r\n  [address: string]: string;\r\n};\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  title: '',\r\n  hideAmountShare: false,\r\n  showZeroAmounts: false,\r\n});\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { fNum } = useNumbers();\r\n/**\r\n * COMPUTED\r\n */\r\nconst sortedAmounts = computed(() =>\r\n  orderBy(\r\n    Object.entries(props.fiatAmountMap),\r\n    ([, fiatAmount]) => Number(fiatAmount),\r\n    'desc'\r\n  ).map(([address, fiatAmount]) => ({\r\n    amount: props.amountMap[address],\r\n    fiatAmount,\r\n    address,\r\n  }))\r\n);\r\nconst groupedAmounts = computed(() =>\r\n  groupBy(sortedAmounts.value, amounts =>\r\n    bnum(amounts.amount || '0').isZero() ? 'zeroAmounts' : 'nonZeroAmounts'\r\n  )\r\n);\r\nconst amountsToShow = computed(() =>\r\n  props.showZeroAmounts\r\n    ? sortedAmounts.value\r\n    : groupedAmounts.value.nonZeroAmounts\r\n);\r\n/**\r\n * METHODS\r\n */\r\n// The investment amount's relative percentage of the total fiat investment value.\r\n// This has nothing to do with the pool weights.\r\nfunction amountShare(address: string): string {\r\n  return bnum(props.fiatAmountMap[address]).div(props.fiatTotal).toString();\r\n}\r\n</script>\r\n  \r\n<template>\r\n  <div class=\"token-amount-table\">\r\n    <div v-if=\"props.title\" class=\"title\">\r\n      {{ props.title }}\r\n    </div>\r\n    <div v-for=\"token in amountsToShow\" :key=\"token.address\" class=\"relative\">\r\n      <div class=\"token-amount-table-content\">\r\n        <div class=\"flex flex-col self-center mr-3\">\r\n          <div class=\"font-medium\">\r\n            <span class=\"font-numeric\">\r\n              {{ fNum(token.amount, FNumFormats.token) }}\r\n            </span>\r\n            {{ tokenMap[token.address]?.symbol }}\r\n          </div>\r\n          <div\r\n            v-if=\"Number(token.fiatAmount) > 0\"\r\n            class=\"text-sm text-secondary font-numeric\"\r\n          >\r\n            {{ fNum(token.fiatAmount, FNumFormats.fiat) }}\r\n            <span v-if=\"!hideAmountShare\">\r\n              ({{ fNum(amountShare(token.address), FNumFormats.percent) }})\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <BalAsset :address=\"token.address\" :size=\"36\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <style scoped>\r\n.token-amount-table {\r\n  @apply shadow-lg border dark:border-gray-700 divide-y dark:divide-gray-700 rounded-lg overflow-hidden;\r\n}\r\n\r\n.title {\r\n  @apply dark:bg-gray-800 bg-gray-50 px-3 py-2;\r\n  @apply font-medium text-sm text-gray-600 dark:text-gray-400;\r\n}\r\n\r\n.token-amount-table-content {\r\n  @apply p-3 flex justify-between;\r\n}\r\n</style>\r\n","import { onBeforeMount, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nimport { usePool } from '@/composables/usePool';\r\nimport { Pool } from '@/services/pool/types';\r\n\r\nimport usePoolTransfers from './usePoolTransfers';\r\nimport useNetwork from '@/composables/useNetwork';\r\n\r\n/**\r\n * This should only be used once at the highest level of the add-liquidity/withdraw flow\r\n * which is the PoolTransfersLayout.\r\n *\r\n * Before page mount it checks if the pool has been loaded and if so checks if transfers\r\n * are allowed. If not, redirects back to pool page. It also watches the pool value\r\n * in the case where the page is accessed before the pool is loaded, e.g. direct access.\r\n * When the pool has a value, i.e. it's loaded, it then checks if transfers are allowed\r\n * and redirects if not.\r\n */\r\nexport default function usePoolTransfersGuard() {\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const router = useRouter();\r\n  const { pool, transfersAllowed } = usePoolTransfers();\r\n  const { noInitLiquidity } = usePool(pool);\r\n  const { networkSlug } = useNetwork();\r\n\r\n  /**\r\n   * METHODS\r\n   */\r\n  function shouldBlockAccess(pool: Pool): boolean {\r\n    if (noInitLiquidity(pool)) return true;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * WATCHERS\r\n   */\r\n  watch(pool, loadedPool => {\r\n    if (loadedPool && shouldBlockAccess(loadedPool)) {\r\n      transfersAllowed.value = false;\r\n      router.push({ name: 'pool', params: { id: loadedPool.id, networkSlug } });\r\n    }\r\n  });\r\n\r\n  /**\r\n   * CALLBACKS\r\n   */\r\n  onBeforeMount(() => {\r\n    transfersAllowed.value = false;\r\n    if (pool.value && shouldBlockAccess(pool.value)) {\r\n      router.push({ name: 'pool', params: { id: pool.value.id, networkSlug } });\r\n    } else {\r\n      transfersAllowed.value = true;\r\n    }\r\n  });\r\n}\r\n"],"names":["usePoolDecorationQuery","pool","options","tokens","useTokens","poolId","computed","_a","queryKey","reactive","QUERY_KEYS","enabled","queryFn","_pool","cloneDeep","poolDecorator","PoolDecorator","decoratedPool","queryOptions","useQuery","useNativeAsset","ref","transfersAllowed","usePoolTransfers","id","useRoute","prices","poolQuery","usePoolQuery","initialPool","poolDecorationQuery","poolQueryLoading","isQueryLoading","loadingPool","tokenAddresses","isDeep","tokensListExclBpt","missingPrices","tokensWithPrice","t","token","includesAddress","useTxState","txState","txInProgress","resetTxState","dist","fn","wait","lastCallAt","deferred","timer","pendingArgs","currentWait","getWait","currentTime","isCold","_len","args","_key","result","defer","flush","argsIndex","results","thisDeferred","resolve","reject","fNum","useNumbers","sortedAmounts","orderBy","props","fiatAmount","address","groupedAmounts","groupBy","amounts","bnum","amountsToShow","amountShare","usePoolTransfersGuard","router","useRouter","noInitLiquidity","usePool","networkSlug","useNetwork","shouldBlockAccess","watch","loadedPool","onBeforeMount"],"mappings":"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","x_google_ignoreList":[3]}