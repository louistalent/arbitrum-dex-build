{"version":3,"file":"useVotingGauges-615a5ed4.js","sources":["../../node_modules/date-fns/esm/add/index.js","../../node_modules/date-fns/esm/constants/index.js","../../node_modules/date-fns/esm/differenceInCalendarYears/index.js","../../node_modules/date-fns/esm/differenceInHours/index.js","../../node_modules/date-fns/esm/differenceInMinutes/index.js","../../node_modules/date-fns/esm/differenceInYears/index.js","../../node_modules/date-fns/esm/getDay/index.js","../../node_modules/date-fns/esm/intervalToDuration/index.js","../../node_modules/date-fns/esm/nextDay/index.js","../../node_modules/date-fns/esm/nextThursday/index.js","../../src/constants/voting-gauges.ts","../../src/services/balancer/gauges/gauge-controller.decorator.ts","../../src/composables/queries/useGaugeVotesQuery.ts","../../src/composables/useVotingGauges.ts"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var daysInYear = 365.2425;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInDay = secondsInHour * 24;\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInWeek = secondsInDay * 7;\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInYear = secondsInDay * daysInYear;\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMonth = secondsInYear / 12;\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInQuarter = secondsInMonth * 3;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import { millisecondsInHour } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import { millisecondsInMinute } from \"../constants/index.js\";\nimport differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarYears from \"../differenceInCalendarYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear(1584);\n  dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport add from \"../add/index.js\";\nimport differenceInDays from \"../differenceInDays/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport differenceInYears from \"../differenceInYears/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(interval) {\n  requiredArgs(1, arguments);\n  var start = toDate(interval.start);\n  var end = toDate(interval.end);\n  if (isNaN(start.getTime())) throw new RangeError('Start Date is invalid');\n  if (isNaN(end.getTime())) throw new RangeError('End Date is invalid');\n  var duration = {};\n  duration.years = Math.abs(differenceInYears(end, start));\n  var sign = compareAsc(end, start);\n  var remainingMonths = add(start, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(end, remainingMonths));\n  var remainingDays = add(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(end, remainingDays));\n  var remainingHours = add(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(end, remainingHours));\n  var remainingMinutes = add(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(end, remainingMinutes));\n  var remainingSeconds = add(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(end, remainingSeconds));\n  return duration;\n}","import addDays from \"../addDays/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week?\n *\n * @description\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {Day} day - day of the week\n * @returns {Date} - the date is the next day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\n\nexport default function nextDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = day - getDay(date);\n  if (delta <= 0) delta += 7;\n  return addDays(date, delta);\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextThursday\n * @category Weekday Helpers\n * @summary When is the next Thursday?\n *\n * @description\n * When is the next Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Thursday after Mar, 22, 2020?\n * const result = nextThursday(new Date(2020, 2, 22))\n * //=> Thur Mar 26 2020 00:00:00\n */\n\nexport default function nextThursday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 4);\n}","import { Network } from '@balancer-labs/sdk';\r\nimport { PoolToken, PoolType } from '@/services/pool/types';\r\n\r\n// voting-gauges.json is inside src\r\n// If we wanted to make it static (public folder) we should use an async import like this solution shows:\r\n// https://stackoverflow.com/questions/74344683/how-to-import-a-json-file-from-public-directory-with-vite/74345564#74345564\r\nimport ALL_VOTING_GAUGES from '@/data/voting-gauges.json';\r\n\r\nexport type VotingGauge = {\r\n  address: string;\r\n  network: Network;\r\n  isKilled: boolean;\r\n  addedTimestamp: number;\r\n  relativeWeightCap: string;\r\n  pool: {\r\n    id: string;\r\n    address: string;\r\n    poolType: PoolType;\r\n    symbol: string | undefined;\r\n    tokens: Pick<PoolToken, 'address' | 'weight' | 'symbol'>[];\r\n  };\r\n  tokenLogoURIs: Record<string, string | undefined>;\r\n};\r\n\r\nexport const GOERLI_VOTING_GAUGES: VotingGauge[] = (\r\n  ALL_VOTING_GAUGES as VotingGauge[]\r\n).filter(gauge => gauge.network === Network.GOERLI);\r\n\r\nexport const MAINNET_VOTING_GAUGES: VotingGauge[] = (\r\n  ALL_VOTING_GAUGES as VotingGauge[]\r\n).filter(gauge => gauge.network !== Network.GOERLI);\r\n\r\nexport const VEBAL_VOTING_GAUGE: VotingGauge | undefined = (\r\n  ALL_VOTING_GAUGES as VotingGauge[]\r\n).find(gauge => gauge.pool.symbol === 'veBAL');\r\n","import { Network } from '@balancer-labs/sdk';\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { JsonRpcProvider } from '@ethersproject/providers';\r\n\r\nimport {\r\n  oneWeekInMs,\r\n  oneWeekInSecs,\r\n  toUnixTimestamp,\r\n} from '@/composables/useTime';\r\nimport { VotingGauge } from '@/constants/voting-gauges';\r\nimport GaugeControllerAbi from '@/lib/abi/GaugeController.json';\r\nimport { configService } from '@/services/config/config.service';\r\nimport { rpcProviderService } from '@/services/rpc-provider/rpc-provider.service';\r\nimport { getOldMulticaller } from '@/dependencies/OldMulticaller';\r\n// eslint-disable-next-line no-restricted-imports\r\nimport { Multicaller } from '@/lib/utils/balancer/contract';\r\n\r\nconst FIRST_WEEK_TIMESTAMP = 1648684800;\r\n\r\nexport interface UserVotesData {\r\n  end: BigNumber;\r\n  power: BigNumber;\r\n  slope: BigNumber;\r\n}\r\n\r\nexport interface Point {\r\n  bias: BigNumber;\r\n  slope: BigNumber;\r\n}\r\n\r\nexport interface RawVotesData {\r\n  gaugeWeightThisPeriod: BigNumber;\r\n  gaugeWeightNextPeriod: BigNumber;\r\n  userVotes: UserVotesData;\r\n  lastUserVoteTime: BigNumber;\r\n}\r\n\r\nexport interface VotesData {\r\n  votes: string;\r\n  votesNextPeriod: string;\r\n  userVotes: string;\r\n  lastUserVoteTime: number;\r\n}\r\n\r\nexport interface RawVotesDataMap {\r\n  gauges: Record<string, RawVotesData>;\r\n}\r\n\r\nexport type VotingGaugeWithVotes = VotingGauge & VotesData;\r\n\r\nexport class GaugeControllerDecorator {\r\n  multicaller: Multicaller;\r\n  network: Network;\r\n  provider: JsonRpcProvider;\r\n\r\n  constructor(\r\n    private readonly abi = GaugeControllerAbi,\r\n    private readonly config = configService\r\n  ) {\r\n    this.network = this.getNetwork();\r\n    this.provider = rpcProviderService.getJsonProvider(this.network);\r\n    this.multicaller = this.resetMulticaller();\r\n  }\r\n\r\n  /**\r\n   * @summary Decorate subgraph gauge schema with onchain data using multicalls.\r\n   */\r\n  async decorateWithVotes(\r\n    votingGauges: VotingGauge[],\r\n    userAddress: string\r\n  ): Promise<VotingGaugeWithVotes[]> {\r\n    this.multicaller = this.resetMulticaller();\r\n    this.callGaugeWeightThisPeriod(votingGauges);\r\n    this.callGaugeWeightNextPeriod(votingGauges);\r\n    if (userAddress) {\r\n      this.callUserGaugeVotes(votingGauges, userAddress);\r\n      this.callUserGaugeVoteTime(votingGauges, userAddress);\r\n    }\r\n\r\n    const votesDataMap = await this.multicaller.execute<RawVotesDataMap>();\r\n\r\n    const decoratedGauges = votingGauges.map(gauge => {\r\n      return {\r\n        id: gauge.address,\r\n        ...gauge,\r\n        ...this.formatVotes(votesDataMap.gauges[gauge.address]),\r\n      };\r\n    });\r\n    return decoratedGauges;\r\n  }\r\n\r\n  private formatVotes(votesData: RawVotesData): VotesData {\r\n    const votes = votesData.gaugeWeightThisPeriod.toString();\r\n    const votesNextPeriod = votesData.gaugeWeightNextPeriod.toString();\r\n\r\n    return {\r\n      votes,\r\n      votesNextPeriod,\r\n      userVotes: votesData?.userVotes?.power.toString() || '0',\r\n      lastUserVoteTime: votesData?.lastUserVoteTime?.toNumber() || 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @summary Fetch total points allocated towards each gauge for this period\r\n   */\r\n  private callGaugeWeightThisPeriod(votingGauges: VotingGauge[]) {\r\n    let thisWeekTimestamp = toUnixTimestamp(\r\n      Math.floor(Date.now() / oneWeekInMs) * oneWeekInMs\r\n    );\r\n    // this makes sure we don't compute votes from before Mar31 in the \"This period\" entry,\r\n    // since the system is not fully active between Mar31 and Apr6\r\n    // (ie the first period starts on Apr7)\r\n    if (thisWeekTimestamp == FIRST_WEEK_TIMESTAMP) {\r\n      thisWeekTimestamp = thisWeekTimestamp - oneWeekInSecs;\r\n    }\r\n    votingGauges.forEach(gauge => {\r\n      this.multicaller.call(\r\n        `gauges.${gauge.address}.gaugeWeightThisPeriod`,\r\n        this.config.network.addresses.gaugeController,\r\n        'gauge_relative_weight_write',\r\n        [gauge.address, thisWeekTimestamp]\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Fetch total points allocated towards each gauge for next period (+1 week)\r\n   */\r\n  private callGaugeWeightNextPeriod(votingGauges: VotingGauge[]) {\r\n    const nextWeekTimestamp = toUnixTimestamp(\r\n      Math.floor((Date.now() + oneWeekInMs) / oneWeekInMs) * oneWeekInMs\r\n    );\r\n    votingGauges.forEach(gauge => {\r\n      this.multicaller.call(\r\n        `gauges.${gauge.address}.gaugeWeightNextPeriod`,\r\n        this.config.network.addresses.gaugeController,\r\n        'gauge_relative_weight_write',\r\n        [gauge.address, nextWeekTimestamp]\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Fetch user's vote weight for each gauge\r\n   */\r\n  private callUserGaugeVotes(votingGauges: VotingGauge[], userAddress: string) {\r\n    votingGauges.forEach(gauge => {\r\n      this.multicaller.call(\r\n        `gauges.${gauge.address}.userVotes`,\r\n        this.config.network.addresses.gaugeController,\r\n        'vote_user_slopes',\r\n        [userAddress, gauge.address]\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Fetch user's vote weight for each gauge\r\n   */\r\n  private callUserGaugeVoteTime(\r\n    votingGauges: VotingGauge[],\r\n    userAddress: string\r\n  ) {\r\n    votingGauges.forEach(gauge => {\r\n      this.multicaller.call(\r\n        `gauges.${gauge.address}.lastUserVoteTime`,\r\n        this.config.network.addresses.gaugeController,\r\n        'last_user_vote',\r\n        [userAddress, gauge.address]\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @summary Get gauge controller network.\r\n   * @description We only have a testnet and mainnet gauge controller\r\n   * so the network key can only be goerli (5) or mainnet (1).\r\n   */\r\n  private getNetwork(): Network {\r\n    if (this.config.env.NETWORK === Network.GOERLI) {\r\n      return Network.GOERLI;\r\n    } else {\r\n      return Network.MAINNET;\r\n    }\r\n  }\r\n\r\n  private resetMulticaller() {\r\n    const Multicaller = getOldMulticaller();\r\n    return new Multicaller(this.network.toString(), this.provider, this.abi);\r\n  }\r\n}\r\n\r\nexport const gaugeControllerDecorator = new GaugeControllerDecorator();\r\n","import { reactive } from 'vue';\r\nimport { useQuery, UseQueryOptions } from '@tanstack/vue-query';\r\n\r\nimport QUERY_KEYS from '@/constants/queryKeys';\r\nimport { VotingGauge } from '@/constants/voting-gauges';\r\nimport {\r\n  gaugeControllerDecorator,\r\n  VotingGaugeWithVotes,\r\n} from '@/services/balancer/gauges/gauge-controller.decorator';\r\nimport useWeb3 from '@/services/web3/useWeb3';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype QueryResponse = VotingGaugeWithVotes[];\r\ntype QueryOptions = UseQueryOptions<QueryResponse>;\r\n\r\n/**\r\n * @summary Fetches guages list from subgraph\r\n */\r\nexport default function useGaugeVotesQuery(\r\n  votingGauges: VotingGauge[],\r\n  options: UseQueryOptions<QueryResponse> = {}\r\n) {\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { account } = useWeb3();\r\n\r\n  /**\r\n   * QUERY KEY\r\n   */\r\n  const queryKey = QUERY_KEYS.Gauges.Voting(account);\r\n\r\n  /**\r\n   * QUERY FUNCTION\r\n   */\r\n  const queryFn = async (): Promise<VotingGaugeWithVotes[]> => {\r\n    try {\r\n      const gauges = await gaugeControllerDecorator.decorateWithVotes(\r\n        votingGauges,\r\n        account.value\r\n      );\r\n      return gauges.map(v => Object.freeze(v));\r\n    } catch (error) {\r\n      console.error('Failed to get gauge votes', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * QUERY OPTIONS\r\n   */\r\n  const queryOptions = reactive({\r\n    enabled: true,\r\n    ...options,\r\n  });\r\n\r\n  return useQuery<QueryResponse>(\r\n    queryKey,\r\n    queryFn,\r\n    queryOptions as QueryOptions\r\n  );\r\n}\r\n","import { Duration, Interval, intervalToDuration, nextThursday } from 'date-fns';\r\nimport { computed, onUnmounted, ref } from 'vue';\r\n\r\nimport {\r\n  GOERLI_VOTING_GAUGES,\r\n  MAINNET_VOTING_GAUGES,\r\n  VotingGauge,\r\n} from '@/constants/voting-gauges';\r\n\r\nimport useGaugeVotesQuery from './queries/useGaugeVotesQuery';\r\nimport { isGoerli } from './useNetwork';\r\nimport { orderedPoolTokens } from '@/composables/usePool';\r\nimport { VotingGaugeWithVotes } from '@/services/balancer/gauges/gauge-controller.decorator';\r\nimport { Pool, PoolToken } from '@/services/pool/types';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nexport function orderedTokenURIs(gauge: VotingGaugeWithVotes): string[] {\r\n  const gaugePool = cloneDeep(gauge.pool as Pool);\r\n  gaugePool.tokensList = gauge.pool.tokens.map(token => token.address);\r\n\r\n  const sortedTokens = orderedPoolTokens(\r\n    gaugePool,\r\n    gaugePool.tokens as PoolToken[]\r\n  );\r\n  return sortedTokens.map(\r\n    token => gauge.tokenLogoURIs[token?.address || ''] || ''\r\n  );\r\n}\r\n\r\nexport default function useVotingGauges() {\r\n  const totalVotes = 1e4;\r\n\r\n  // Hard coded list of voting gauges\r\n  const _votingGauges = computed((): VotingGauge[] => {\r\n    if (isGoerli.value) {\r\n      return GOERLI_VOTING_GAUGES as VotingGauge[];\r\n    } else {\r\n      return MAINNET_VOTING_GAUGES as VotingGauge[];\r\n    }\r\n  });\r\n\r\n  // Fetch onchain votes data for given votingGauges\r\n  const gaugeVotesQuery = useGaugeVotesQuery(_votingGauges.value);\r\n\r\n  const isLoading = computed(\r\n    (): boolean =>\r\n      gaugeVotesQuery.isLoading.value || !!gaugeVotesQuery.error.value\r\n  );\r\n\r\n  const votingGauges = computed(() => gaugeVotesQuery.data.value || []);\r\n\r\n  const unallocatedVotes = computed(() => {\r\n    if (isLoading.value || !votingGauges.value) return totalVotes;\r\n    const votesRemaining = votingGauges.value.reduce(\r\n      (remainingVotes, gauge) => {\r\n        return remainingVotes - parseFloat(gauge.userVotes);\r\n      },\r\n      totalVotes\r\n    );\r\n    return votesRemaining;\r\n  });\r\n\r\n  const now = ref(Date.now());\r\n  const nowInterval = setInterval(() => {\r\n    now.value = Date.now();\r\n  }, 1000);\r\n\r\n  onUnmounted(() => {\r\n    if (!nowInterval) return;\r\n    clearInterval(nowInterval);\r\n  });\r\n\r\n  const votingPeriodEnd = computed<number[]>(() => {\r\n    const periodEnd = getVotePeriodEndTime();\r\n    const interval: Interval = { start: now.value, end: periodEnd };\r\n    const timeUntilEnd: Duration = intervalToDuration(interval);\r\n    const formattedTime = [\r\n      (timeUntilEnd.days || 0) % 7,\r\n      timeUntilEnd.hours || 0,\r\n      timeUntilEnd.minutes || 0,\r\n      timeUntilEnd.seconds || 0,\r\n    ];\r\n    return formattedTime;\r\n  });\r\n\r\n  const votingPeriodLastHour = computed((): boolean => {\r\n    const periodEnd = getVotePeriodEndTime();\r\n    const interval: Interval = { start: now.value, end: periodEnd };\r\n    const timeUntilEnd: Duration = intervalToDuration(interval);\r\n    return (timeUntilEnd.days || 0) < 1 && (timeUntilEnd.hours || 0) < 1;\r\n  });\r\n\r\n  function getVotePeriodEndTime(): number {\r\n    const n = nextThursday(new Date());\r\n    const epochEndTime = Date.UTC(\r\n      n.getFullYear(),\r\n      n.getMonth(),\r\n      n.getDate(),\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    return epochEndTime;\r\n  }\r\n\r\n  return {\r\n    totalVotes,\r\n    isLoading,\r\n    votingGauges,\r\n    unallocatedVotes,\r\n    votingPeriodEnd,\r\n    votingPeriodLastHour,\r\n    refetch: gaugeVotesQuery.refetch,\r\n  };\r\n}\r\n"],"names":["_typeof","obj","add","dirtyDate","duration","requiredArgs","years","toInteger","months","weeks","days","hours","minutes","seconds","date","toDate","dateWithMonths","addMonths","dateWithDays","addDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","millisecondsInMinute","millisecondsInHour","differenceInCalendarYears","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","differenceInHours","options","diff","differenceInMilliseconds","getRoundingMethod","differenceInMinutes","differenceInYears","sign","compareAsc","difference","isLastYearNotFull","result","getDay","day","intervalToDuration","interval","start","end","remainingMonths","differenceInMonths","remainingDays","differenceInDays","remainingHours","remainingMinutes","remainingSeconds","differenceInSeconds","nextDay","delta","nextThursday","GOERLI_VOTING_GAUGES","ALL_VOTING_GAUGES","gauge","Network","MAINNET_VOTING_GAUGES","VEBAL_VOTING_GAUGE","FIRST_WEEK_TIMESTAMP","GaugeControllerDecorator","abi","GaugeControllerAbi","config","configService","__publicField","rpcProviderService","votingGauges","userAddress","votesDataMap","votesData","votes","votesNextPeriod","_a","_b","thisWeekTimestamp","toUnixTimestamp","oneWeekInMs","oneWeekInSecs","nextWeekTimestamp","Multicaller","getOldMulticaller","gaugeControllerDecorator","useGaugeVotesQuery","account","useWeb3","queryKey","QUERY_KEYS","queryFn","v","error","queryOptions","reactive","useQuery","orderedTokenURIs","gaugePool","cloneDeep","token","orderedPoolTokens","useVotingGauges","_votingGauges","computed","isGoerli","gaugeVotesQuery","isLoading","unallocatedVotes","remainingVotes","now","ref","nowInterval","onUnmounted","votingPeriodEnd","periodEnd","getVotePeriodEndTime","timeUntilEnd","votingPeriodLastHour","n"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}