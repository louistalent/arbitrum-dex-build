{"version":3,"file":"APRTooltip.vue_vue_type_script_setup_true_lang-0e752bc5.js","sources":["../../src/components/_global/BalBreakdown/BalBreakdown.vue","../../src/components/tooltips/APRTooltip/components/StakingBreakdown.vue","../../src/components/tooltips/APRTooltip/components/VeBalBreakdown.vue","../../src/components/tooltips/APRTooltip/components/YieldBreakdown.vue","../../src/components/tooltips/APRTooltip/APRTooltip.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  items: Array<any>;\r\n  title?: string;\r\n  hideItems?: boolean;\r\n  size?: string;\r\n  offsetClassOverrides?: string;\r\n  initVertBarClassOverrides?: string;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  title: 'Title',\r\n  hideItems: false,\r\n  size: 'md',\r\n  offsetClassOverrides: '',\r\n  initVertBarClassOverrides: '',\r\n});\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst initVertBarSizes = computed(() => {\r\n  if (props.initVertBarClassOverrides != null) {\r\n    return props.initVertBarClassOverrides;\r\n  }\r\n\r\n  switch (props.size) {\r\n    case 'lg':\r\n      return 'h-8 -mt-8';\r\n    default:\r\n      return 'h-4 -mt-4';\r\n  }\r\n});\r\n\r\nconst vertBarSizes = computed(() => {\r\n  switch (props.size) {\r\n    case 'lg':\r\n      return 'h-16 -mt-16';\r\n    default:\r\n      return 'h-8 -mt-8';\r\n  }\r\n});\r\n\r\nconst spacingClass = computed(() => {\r\n  switch (props.size) {\r\n    case 'lg':\r\n      return 'mt-4';\r\n    default:\r\n      return 'mt-0';\r\n  }\r\n});\r\n\r\nconst offsetClass = computed(() => {\r\n  if (props.offsetClassOverrides) {\r\n    return props.offsetClassOverrides;\r\n  }\r\n\r\n  switch (props.size) {\r\n    case 'lg':\r\n      return 'mt-3 ml-px';\r\n    default:\r\n      return 'mt-2 ml-px';\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div>\r\n      <slot>\r\n        {{ title }}\r\n      </slot>\r\n    </div>\r\n    <div v-if=\"!hideItems\" :class=\"['flex flex-col', offsetClass]\">\r\n      <div\r\n        v-for=\"(item, i) in items\"\r\n        :key=\"i\"\r\n        :class=\"['flex items-center', { [spacingClass]: i !== 0 }]\"\r\n      >\r\n        <div v-if=\"i === 0\" :class=\"['init-vert-bar', initVertBarSizes]\" />\r\n        <div v-else :class=\"['vert-bar', vertBarSizes]\" />\r\n        <div class=\"horiz-bar\" />\r\n        <div class=\"grow\">\r\n          <slot name=\"item\" :item=\"item\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.horiz-bar {\r\n  @apply h-px w-3 bg-gray-200 dark:bg-gray-700 mr-2;\r\n}\r\n\r\n.init-vert-bar {\r\n  @apply w-px bg-gray-200 dark:bg-gray-700 -mr-px;\r\n}\r\n\r\n.vert-bar {\r\n  @apply w-px bg-gray-200 dark:bg-gray-700 -mr-px;\r\n}\r\n</style>\r\n","<script lang=\"ts\" setup>\r\nimport { computed } from 'vue';\r\n\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\nimport { bnum } from '@/lib/utils';\r\nimport { Pool } from '@/services/pool/types';\r\nimport { hasBalEmissions } from '@/services/staking/utils';\r\nimport { AprBreakdown } from '@balancer-labs/sdk';\r\nimport { useTokens } from '@/providers/tokens.provider';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  pool: Pool;\r\n  poolApr?: AprBreakdown;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { fNum } = useNumbers();\r\nconst { getToken } = useTokens();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\n\r\nconst apr = computed(() => props.pool?.apr || props.poolApr);\r\n\r\nconst boost = computed((): string => props.pool?.boost || '');\r\nconst hasBoost = computed((): boolean => !!boost.value);\r\nconst stakingAPR = computed(\r\n  (): AprBreakdown['stakingApr'] | undefined => apr.value?.stakingApr\r\n);\r\nconst isMinMaxSame = computed(\r\n  (): boolean => stakingAPR.value?.min === stakingAPR.value?.max\r\n);\r\nconst minBalAPR = computed((): number => stakingAPR.value?.min || 0);\r\nconst maxBalAPR = computed((): number => stakingAPR.value?.max || 0);\r\nconst rewardTokensAPR = computed(\r\n  (): number => apr.value?.rewardAprs.total || 0\r\n);\r\nconst hasRewardTokens = computed((): boolean =>\r\n  bnum(rewardTokensAPR.value).gt(0)\r\n);\r\n\r\n/**\r\n * @summary The total APR if we have the user's boost.\r\n */\r\nconst boostedTotalAPR = computed((): string => {\r\n  if (apr.value && hasBalEmissions(apr.value)) {\r\n    const boostedStakingAPR = bnum(minBalAPR.value)\r\n      .times(boost.value)\r\n      .plus(rewardTokensAPR.value)\r\n      .toString();\r\n\r\n    return fNum(boostedStakingAPR, FNumFormats.bp);\r\n  }\r\n\r\n  return fNum(rewardTokensAPR.value, FNumFormats.bp);\r\n});\r\n\r\n/**\r\n * @summary The total APR if we have don't have the user's boost.\r\n */\r\nconst unboostedTotalAPR = computed((): string =>\r\n  fNum(\r\n    bnum(minBalAPR.value).plus(rewardTokensAPR.value).toString(),\r\n    FNumFormats.bp\r\n  )\r\n);\r\n\r\nconst breakdownItems = computed((): Array<any> => {\r\n  const items: Array<any> = [];\r\n\r\n  if (!isMinMaxSame.value) {\r\n    items.push(['Min BAL', minBalAPR.value], ['Max BAL', maxBalAPR.value]);\r\n  }\r\n\r\n  if (hasRewardTokens.value) {\r\n    if (isMinMaxSame.value) {\r\n      items.push(['BAL', minBalAPR.value]);\r\n    }\r\n\r\n    const rewardAprTokens = apr.value?.rewardAprs.breakdown;\r\n    if (rewardAprTokens) {\r\n      Object.keys(rewardAprTokens).forEach(address => {\r\n        items.push([\r\n          getToken(address)?.symbol || 'Rewards',\r\n          rewardAprTokens[address],\r\n        ]);\r\n      });\r\n    } else {\r\n      items.push(['Rewards', rewardTokensAPR.value]);\r\n    }\r\n  }\r\n\r\n  return items;\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div data-testid=\"staking-apr\">\r\n    <div v-if=\"hasBoost\">\r\n      <div class=\"flex items-center\">\r\n        {{ boostedTotalAPR }}\r\n        <span class=\"ml-1 text-secondarytext-xs\">\r\n          {{ $t('staking.stakingApr') }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <template v-else>\r\n      <BalBreakdown v-if=\"hasBalEmissions(apr)\" :items=\"breakdownItems\">\r\n        <div class=\"flex items-center\">\r\n          {{ unboostedTotalAPR }}\r\n          <span class=\"ml-1 text-xs text-secondary\">\r\n            {{\r\n              isMinMaxSame\r\n                ? $t('staking.stakingApr')\r\n                : $t('staking.minimumStakingApr')\r\n            }}\r\n          </span>\r\n        </div>\r\n        <template #item=\"{ item: [label, amount] }\">\r\n          {{ fNum(amount, FNumFormats.bp) }}\r\n          <span class=\"ml-1 text-xs capitalize text-secondary\">\r\n            {{ label }} {{ $t('apr') }}\r\n          </span>\r\n        </template>\r\n      </BalBreakdown>\r\n      <div v-else-if=\"hasRewardTokens\" class=\"flex items-center\">\r\n        {{ fNum(rewardTokensAPR, FNumFormats.bp) }}\r\n        <span class=\"ml-1 text-xs text-secondary\">\r\n          {{ $t('staking.stakingApr') }}\r\n        </span>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n","<script lang=\"ts\" setup>\r\nimport { computed } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  apr: number;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { fNum } = useNumbers();\r\nconst { t } = useI18n();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst aprLabel = computed((): string => fNum(props.apr, FNumFormats.bp));\r\n\r\nconst items = computed((): string[] => [\r\n  t('tooltips.veBalApr.breakdown1'),\r\n  t('tooltips.veBalApr.breakdown2'),\r\n]);\r\n</script>\r\n\r\n<template>\r\n  <div data-testid=\"vebal-apr\">\r\n    <BalBreakdown :items=\"items\">\r\n      {{ aprLabel }}\r\n      <span class=\"ml-1 text-xs text-secondary\">\r\n        {{ $t('tooltips.veBalApr.title') }}\r\n      </span>\r\n      <template #item=\"{ item }\">\r\n        <div class=\"text-xs text-secondary\">\r\n          {{ item }}\r\n        </div>\r\n      </template>\r\n    </BalBreakdown>\r\n  </div>\r\n</template>\r\n","<script lang=\"ts\" setup>\r\nimport { Pool } from '@/services/pool/types';\r\nimport { AprBreakdown } from '@balancer-labs/sdk';\r\nimport { getAddress } from '@ethersproject/address';\r\nimport { computed } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\nimport {\r\n  hasBoostedAPR,\r\n  isDeep,\r\n  isVeBalPoolAddress,\r\n} from '@/composables/usePool';\r\nimport { useTokens } from '@/providers/tokens.provider';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  yieldAPR: AprBreakdown['tokenAprs'];\r\n  pool: Pool;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { getToken, getTokens } = useTokens();\r\nconst { fNum } = useNumbers();\r\nconst { t } = useI18n();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst yieldAPRTokens = computed(() => {\r\n  return getTokens(Object.keys(props.yieldAPR.breakdown));\r\n});\r\n\r\nconst hasMultiRewardTokens = computed(\r\n  () => Object.keys(yieldAPRTokens.value).length > 1\r\n);\r\n\r\nconst yieldAPRLabel = computed(() => {\r\n  const yieldTokensList = Object.keys(props.yieldAPR.breakdown);\r\n\r\n  if (isDeep(props.pool)) return t('yieldAprRewards.apr.boosted');\r\n\r\n  if (yieldTokensList.length > 1) {\r\n    return t('yieldAprRewards.apr.token');\r\n  }\r\n\r\n  if (yieldTokensList.length === 1) {\r\n    if (hasBoostedAPR(yieldTokensList[0]))\r\n      return t('yieldAprRewards.apr.boosted');\r\n    if (isVeBalPoolAddress(yieldTokensList[0]))\r\n      return t('yieldAprRewards.apr.veBAL');\r\n\r\n    const tokenAddress = getAddress(yieldTokensList[0]);\r\n    const token = getToken(tokenAddress);\r\n\r\n    if (!token) {\r\n      return t('yieldAprRewards.apr.token');\r\n    }\r\n\r\n    return `${token.symbol} ${t('apr')}`;\r\n  }\r\n\r\n  return '';\r\n});\r\n\r\nconst yieldBreakdownItems = computed((): [string, number][] =>\r\n  Object.entries(props.yieldAPR.breakdown)\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div data-testid=\"yield-apr\">\r\n    <BalBreakdown\r\n      :items=\"yieldBreakdownItems\"\r\n      :hideItems=\"!hasMultiRewardTokens\"\r\n    >\r\n      <div class=\"flex items-center\">\r\n        {{ fNum(yieldAPR.total, FNumFormats.bp) }}\r\n        <span class=\"ml-1 text-xs text-secondary\"> {{ yieldAPRLabel }} </span>\r\n      </div>\r\n      <template v-if=\"hasMultiRewardTokens\" #item=\"{ item: [address, amount] }\">\r\n        {{ fNum(amount, FNumFormats.bp) }}\r\n        <span class=\"ml-1 text-xs text-secondary\">\r\n          {{ yieldAPRTokens[getAddress(address)].symbol }} {{ $t('apr') }}\r\n        </span>\r\n      </template>\r\n    </BalBreakdown>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed } from 'vue';\r\n\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\nimport { isVeBalPool, totalAprLabel } from '@/composables/usePool';\r\nimport { APR_THRESHOLD } from '@/constants/pools';\r\nimport { bnum } from '@/lib/utils';\r\nimport { Pool } from '@/services/pool/types';\r\nimport { hasStakingRewards } from '@/services/staking/utils';\r\n\r\nimport StakingBreakdown from './components/StakingBreakdown.vue';\r\nimport VeBalBreakdown from './components/VeBalBreakdown.vue';\r\nimport YieldBreakdown from './components/YieldBreakdown.vue';\r\nimport { AprBreakdown } from '@balancer-labs/sdk';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  pool: Pool;\r\n  poolApr?: AprBreakdown;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { fNum } = useNumbers();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst apr = computed<AprBreakdown | undefined>(\r\n  () => props.pool?.apr || props.poolApr\r\n);\r\nconst validAPR = computed(\r\n  () => Number(apr.value?.swapFees || 0) <= APR_THRESHOLD\r\n);\r\n\r\nconst hasYieldAPR = computed(() => {\r\n  return bnum(apr.value?.tokenAprs.total || '0').gt(0);\r\n});\r\n\r\nconst hasVebalAPR = computed((): boolean => isVeBalPool(props.pool.id));\r\n\r\nconst totalLabel = computed((): string =>\r\n  apr.value ? totalAprLabel(apr.value, props.pool.boost) : '0'\r\n);\r\n</script>\r\n\r\n<template v-slot:aprCell=\"pool\">\r\n  <BalTooltip v-if=\"validAPR\" width=\"auto\" noPad>\r\n    <template #activator>\r\n      <div class=\"ml-1\">\r\n        <StarsIcon\r\n          v-if=\"hasYieldAPR || hasStakingRewards(apr) || hasVebalAPR\"\r\n          :gradFrom=\"hasVebalAPR ? 'purple' : 'yellow'\"\r\n          class=\"-mr-1 h-4\"\r\n          v-bind=\"$attrs\"\r\n        />\r\n        <BalIcon\r\n          v-else\r\n          name=\"info\"\r\n          size=\"sm\"\r\n          class=\"text-gray-400 dark:text-gray-500\"\r\n          v-bind=\"$attrs\"\r\n        />\r\n      </div>\r\n    </template>\r\n    <div class=\"text-sm divide-y dark:divide-gray-900\">\r\n      <div\r\n        class=\"px-3 pt-3 pb-1 bg-gray-50 dark:bg-gray-800 rounded-t\"\r\n        data-testid=\"total-apr\"\r\n      >\r\n        <div class=\"text-secondary\">\r\n          {{ $t('totalAPR') }}\r\n        </div>\r\n        <div class=\"text-lg font-bold normal-nums tracking-tighter\">\r\n          {{ totalLabel }}\r\n        </div>\r\n      </div>\r\n      <div class=\"p-3 text-left\">\r\n        <!-- SWAP FEE APR -->\r\n        <div\r\n          class=\"flex items-center mb-1 whitespace-nowrap\"\r\n          data-testid=\"swap-fee-apr\"\r\n        >\r\n          {{ fNum(apr?.swapFees || '0', FNumFormats.bp) }}\r\n          <span class=\"ml-1 text-xs text-secondary\">\r\n            {{ $t('swapFeeAPR') }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- VeBal APR -->\r\n        <VeBalBreakdown v-if=\"hasVebalAPR\" :apr=\"apr?.protocolApr || 0\" />\r\n\r\n        <!-- YIELD APR BREAKDOWN -->\r\n        <YieldBreakdown\r\n          v-if=\"apr?.tokenAprs && hasYieldAPR\"\r\n          :yieldAPR=\"apr?.tokenAprs\"\r\n          :pool=\"pool\"\r\n        />\r\n\r\n        <!-- STAKING APR BREAKDOWN -->\r\n        <StakingBreakdown :pool=\"pool\" :poolApr=\"apr\" />\r\n      </div>\r\n    </div>\r\n  </BalTooltip>\r\n</template>\r\n"],"names":["initVertBarSizes","computed","props","vertBarSizes","spacingClass","offsetClass","fNum","useNumbers","getToken","useTokens","apr","_a","boost","hasBoost","stakingAPR","isMinMaxSame","_b","minBalAPR","maxBalAPR","rewardTokensAPR","hasRewardTokens","bnum","boostedTotalAPR","hasBalEmissions","boostedStakingAPR","FNumFormats","unboostedTotalAPR","breakdownItems","items","rewardAprTokens","address","t","useI18n","aprLabel","getTokens","yieldAPRTokens","hasMultiRewardTokens","yieldAPRLabel","yieldTokensList","isDeep","hasBoostedAPR","isVeBalPoolAddress","tokenAddress","getAddress","token","yieldBreakdownItems","validAPR","APR_THRESHOLD","hasYieldAPR","hasVebalAPR","isVeBalPool","totalLabel","totalAprLabel"],"mappings":"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"}