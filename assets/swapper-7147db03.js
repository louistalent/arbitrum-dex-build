var C=Object.defineProperty;var V=(n,t,a)=>t in n?C(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a;var p=(n,t,a)=>(V(n,typeof t!="symbol"?t+"":t,a),a);import{d3 as O,cH as x,a as E,w as I,cM as M,by as S,A as f,cn as u,d4 as g,bW as b}from"./index-4a1c513c.js";function y(n){const t=Date.now()/1e3,a=Math.floor(n*60+t);return Math.min(a,O)}class L{constructor(t=E,a=I){p(this,"abi");this.config=t,this.walletService=a,this.abi=x.Vault__factory.abi}get address(){return this.config.network.addresses.vault}swap(t,a,e,s,r={}){const o=y(s);return this.walletService.txBuilder.contract.sendTransaction({contractAddress:this.address,abi:this.abi,action:"swap",params:[t,a,e,o],options:r})}batchSwap(t,a,e,s,r,o,i={}){const c=y(o);return this.walletService.txBuilder.contract.sendTransaction({contractAddress:this.address,abi:this.abi,action:"batchSwap",params:[t,a,e,s,r,c],options:i})}}const m=new L;class H extends L{constructor(){super(),this.abi=x.LidoRelayer__factory.abi}get address(){return this.config.network.addresses.lidoRelayer}}const v=new H;var l=(n=>(n[n.fixed=0]="fixed",n[n.min=1]="min",n[n.max=2]="max",n))(l||{});class _{constructor(t=E,a=I){this.config=t,this.walletService=a}async batchSwapV2(t,a,e,s){if(M(t.address,a.address))return this.lidoBatchSwap(t,a,e,s);console.log("[Swap Service] batchSwapV2");const r={};S(t.address,f)&&(r.value=t.amount);const o=a.type===1?u.SwapExactIn:u.SwapExactOut,i=await this.getFundManagement();try{if(e.length==1){const d={poolId:e[0].poolId,kind:o,assetIn:s[e[0].assetInIndex],assetOut:s[e[0].assetOutIndex],amount:e[0].amount,userData:e[0].userData},w=o===u.SwapExactIn?a.amount.toString():t.amount.toString();return m.swap(d,i,w,r)}const c=this.calculateLimits([t],[a],s);return m.batchSwap(o,e,s,i,c,r)}catch(c){return console.log("[Swapper] batchSwapV2 Error:",c),Promise.reject(c)}}async lidoBatchSwap(t,a,e,s){console.log("[Swapper] lidoBatchSwap");const r={};S(t.address,f)&&(r.value=t.amount);const{stETH:o,wstETH:i}=this.config.network.addresses;t.address.toLowerCase()===o.toLowerCase()?t={address:i.toLowerCase(),amount:await g(t.amount),type:t.type}:a.address.toLowerCase()===o.toLowerCase()&&(a={address:i.toLowerCase(),amount:await g(a.amount),type:a.type});const c=a.type===1?u.SwapExactIn:u.SwapExactOut,d=await this.getFundManagement();try{if(e.length==1){const B={poolId:e[0].poolId,kind:c,assetIn:s[e[0].assetInIndex],assetOut:s[e[0].assetOutIndex],amount:e[0].amount,userData:e[0].userData};return v.swap(B,d,a.amount.toString(),r)}const w=this.calculateLimits([t],[a],s);return v.batchSwap(c,e,s,d,w,r)}catch(w){return console.log("[Swapper] lidoBatchSwap Error:",w),Promise.reject(w)}}async boostedJoinBatchSwap(t,a,e,s){try{const r={},o=await this.getFundManagement(),i=this.calculateLimits(t,[a],s);return m.batchSwap(u.SwapExactIn,e,s,o,i,r)}catch(r){throw console.log("[Swapper] batchSwapGivenInV2 Error:",r),r}}async boostedExitBatchSwap(t,a,e,s,r){try{const o={},i=await this.getFundManagement(),c=this.calculateLimits([t],a,s);return console.log("limits",c),m.batchSwap(r,e,s,i,c,o)}catch(o){throw console.log("[Swapper] batchSwapGivenInV2 Error:",o),o}}async getFundManagement(){const t=await this.walletService.getUserAddress();return{sender:t,recipient:t,fromInternalBalance:!1,toInternalBalance:!1}}calculateLimits(t,a,e){const s=[];return e.forEach((r,o)=>{const i=t.find(d=>r.toLowerCase()===d.address.toLowerCase()),c=a.find(d=>r.toLowerCase()===d.address.toLowerCase());i?s[o]=i.amount.toString():c?s[o]=c.amount.mul(-1).toString():s[o]="0"}),console.log("Limits",s),s}}const h=new _;async function F(n,t,a){const e=n.result.tokenIn,s=n.result.tokenOut,r={address:e,amount:t,type:l.fixed},o={address:s,amount:a,type:l.min};return h.batchSwapV2(r,o,n.result.swaps,n.result.tokenAddresses)}async function j(n,t,a){const e=n.result.tokenIn,s=n.result.tokenOut,r={address:e,amount:t,type:l.max},o={address:s,amount:a,type:l.fixed};return h.batchSwapV2(r,o,n.result.swaps,n.result.tokenAddresses)}async function J(n,t,a,e,s){const r=Object.entries(e).map(([i,c])=>({address:i,amount:c,type:l.fixed})),o={address:a,amount:s,type:l.min};return h.boostedJoinBatchSwap(r,o,n,t)}async function P(n,t,a,e,s,r=u.SwapExactIn){const o={address:a,amount:b.from(e),type:l.min},i=Object.entries(s).map(([c,d])=>({address:c,amount:b.from(d),type:l.fixed}));return h.boostedExitBatchSwap(o,i,n,t,r)}export{P as a,J as b,y as c,j as d,F as s,m as v};
//# sourceMappingURL=swapper-7147db03.js.map
