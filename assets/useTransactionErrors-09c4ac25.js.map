{"version":3,"file":"useTransactionErrors-09c4ac25.js","sources":["../../src/components/_global/icons/LightBulbIcon.vue","../../src/components/_global/BalAlert/BalAlert.vue","../../src/components/_global/BalAlert/BalAlert.vue","../../src/composables/useTransactionErrors.ts"],"sourcesContent":["<template>\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M18.4 5.6L17.7 6.3M3 12H4H3ZM12 3V4V3ZM20 12H21H20ZM5.6 5.6L6.3 6.3L5.6 5.6Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M18.4 5.6L17.7 6.3M3 12H4H3ZM12 3V4V3ZM20 12H21H20ZM5.6 5.6L6.3 6.3L5.6 5.6Z\"\r\n      stroke=\"currentColor\"\r\n      stroke-opacity=\"0.2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M9 16C8.16047 15.3704 7.54033 14.4925 7.22743 13.4908C6.91453 12.4892 6.92473 11.4144 7.25658 10.4189C7.58844 9.4233 8.22512 8.55739 9.07645 7.94379C9.92778 7.33019 10.9506 7 12 7C13.0494 7 14.0722 7.33019 14.9236 7.94379C15.7749 8.55739 16.4116 9.4233 16.7434 10.4189C17.0753 11.4144 17.0855 12.4892 16.7726 13.4908C16.4597 14.4925 15.8395 15.3704 15 16C14.6096 16.3865 14.3156 16.8594 14.1419 17.3806C13.9681 17.9018 13.9195 18.4566 14 19C14 19.5304 13.7893 20.0391 13.4142 20.4142C13.0391 20.7893 12.5304 21 12 21C11.4696 21 10.9609 20.7893 10.5858 20.4142C10.2107 20.0391 10 19.5304 10 19C10.0805 18.4566 10.0319 17.9018 9.85813 17.3806C9.6844 16.8594 9.39043 16.3865 9 16\"\r\n      stroke=\"currentColor\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M9 16C8.16047 15.3704 7.54033 14.4925 7.22743 13.4908C6.91453 12.4892 6.92473 11.4144 7.25658 10.4189C7.58844 9.4233 8.22512 8.55739 9.07645 7.94379C9.92778 7.33019 10.9506 7 12 7C13.0494 7 14.0722 7.33019 14.9236 7.94379C15.7749 8.55739 16.4116 9.4233 16.7434 10.4189C17.0753 11.4144 17.0855 12.4892 16.7726 13.4908C16.4597 14.4925 15.8395 15.3704 15 16C14.6096 16.3865 14.3156 16.8594 14.1419 17.3806C13.9681 17.9018 13.9195 18.4566 14 19C14 19.5304 13.7893 20.0391 13.4142 20.4142C13.0391 20.7893 12.5304 21 12 21C11.4696 21 10.9609 20.7893 10.5858 20.4142C10.2107 20.0391 10 19.5304 10 19C10.0805 18.4566 10.0319 17.9018 9.85813 17.3806C9.6844 16.8594 9.39043 16.3865 9 16\"\r\n      stroke=\"currentColor\"\r\n      stroke-opacity=\"0.2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M9.7002 17H14.3002\"\r\n      stroke=\"currentColor\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M9.7002 17H14.3002\"\r\n      stroke=\"currentColor\"\r\n      stroke-opacity=\"0.2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n  </svg>\r\n</template>\r\n","<template>\r\n  <div :class=\"['bal-alert', classes]\">\r\n    <div :class=\"['bal-alert-container', containerClasses]\">\r\n      <div>\r\n        <div :class=\"['bal-alert-icon', iconClasses]\">\r\n          <LightBulbIcon v-if=\"type === 'tip'\"></LightBulbIcon>\r\n          <BalIcon v-else name=\"alert-circle\" :size=\"iconSize\" />\r\n        </div>\r\n      </div>\r\n      <div :class=\"['bal-alert-content', contentClasses]\">\r\n        <div>\r\n          <h5 :class=\"['bal-alert-title', titleClasses, textSizeClass]\">\r\n            <slot name=\"title\">\r\n              {{ title }}\r\n            </slot>\r\n          </h5>\r\n          <p\r\n            v-if=\"$slots.default || description\"\r\n            :class=\"['bal-alert-description', descriptionColor, textSizeClass]\"\r\n          >\r\n            <slot>\r\n              {{ description }}\r\n            </slot>\r\n          </p>\r\n        </div>\r\n        <div v-if=\"actionLabel\" :class=\"[actionClasses]\">\r\n          <BalBtn :color=\"btnColor\" size=\"xs\" @click=\"$emit('action-click')\">\r\n            {{ actionLabel }}\r\n          </BalBtn>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType } from 'vue';\r\n\r\nimport BalBtn from '../BalBtn/BalBtn.vue';\r\nimport BalIcon from '../BalIcon/BalIcon.vue';\r\n\r\ntype AlertType = 'warning' | 'error' | 'info' | 'tip';\r\n\r\nexport default defineComponent({\r\n  name: 'BalAlert',\r\n\r\n  components: {\r\n    BalIcon,\r\n    BalBtn,\r\n  },\r\n\r\n  props: {\r\n    type: { type: String as PropType<AlertType>, default: 'info' },\r\n    size: {\r\n      type: String,\r\n      default: 'md',\r\n      validator: (val: string): boolean => ['sm', 'md', 'lg'].includes(val),\r\n    },\r\n    title: { type: String, default: 'A title message' },\r\n    description: { type: String, default: '' },\r\n    actionLabel: { type: String, default: '' },\r\n    raised: { type: Boolean, default: false },\r\n    block: { type: Boolean, default: false },\r\n    contentClass: { type: String, default: '' },\r\n    square: { type: Boolean, default: false },\r\n    noBorder: { type: Boolean, default: false },\r\n  },\r\n\r\n  emits: ['action-click'],\r\n\r\n  setup(props, { slots }) {\r\n    const bgColorClass = computed(() => {\r\n      switch (props.type) {\r\n        case 'tip':\r\n          return 'bg-blue-50 dark:bg-blue-500 dark:bg-opacity-10 border-blue-200 dark:border-blue-500 text-black dark:text-white';\r\n        case 'warning':\r\n          return 'bg-orange-50 dark:bg-orange-600/10 border-orange-200 dark:border-orange-700 text-black dark:text-white';\r\n        case 'error':\r\n          return 'bg-red-50 dark:bg-red-500/10 border-red-200 dark:border-red-900 text-black dark:text-white';\r\n        default:\r\n          return 'bg-gray-100 dark:bg-gray-500 dark:border-0 border-gray-200 text-black dark:text-white';\r\n      }\r\n    });\r\n\r\n    const paddingClasses = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'p-1';\r\n        default:\r\n          return 'p-2';\r\n      }\r\n    });\r\n\r\n    const textSizeClass = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'text-xs';\r\n        case 'lg':\r\n          return 'text-base';\r\n        default:\r\n          return 'text-sm';\r\n      }\r\n    });\r\n\r\n    const classes = computed(() => {\r\n      return {\r\n        [bgColorClass.value]: true,\r\n        [paddingClasses.value]: true,\r\n        'shadow-sm': props.raised,\r\n        'w-full': props.block,\r\n        'rounded-lg': !props.square,\r\n        border: !props.noBorder,\r\n      };\r\n    });\r\n\r\n    const containerClasses = computed(() => ({\r\n      'items-center': !props.description && !slots.default,\r\n    }));\r\n\r\n    const contentClasses = computed(() => [\r\n      props.contentClass,\r\n      {\r\n        'items-center': !props.description && !slots.default,\r\n        'flex-col': !!props.description || slots.default,\r\n      },\r\n    ]);\r\n\r\n    const iconSizeClasses = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'w-5 h-5';\r\n        case 'lg':\r\n          return 'w-7 h-7';\r\n        default:\r\n          return 'w-6 h-6';\r\n      }\r\n    });\r\n\r\n    const iconColorClasses = computed(() => {\r\n      switch (props.type) {\r\n        case 'tip':\r\n          return 'text-blue-700 dark:text-blue-400';\r\n        case 'warning':\r\n          return 'text-orange-500 dark:text-white bg-orange-500/10 dark:bg-white/10';\r\n        case 'error':\r\n          return 'text-red-500 dark:text-white bg-red-500/10 dark:bg-white/10';\r\n        default:\r\n          return 'text-secondary dark:text-white bg-black/10 dark:bg-white/10';\r\n      }\r\n    });\r\n\r\n    const iconClasses = computed(() => {\r\n      return {\r\n        [iconSizeClasses.value]: true,\r\n        [iconColorClasses.value]: true,\r\n      };\r\n    });\r\n\r\n    const titleClasses = computed(() => ({\r\n      'font-semibold': !!props.description || slots.default,\r\n    }));\r\n\r\n    const descriptionColor = computed(() => {\r\n      if (props.type === 'tip') return 'text-black dark:text-white';\r\n      return 'text-black dark:text-white text-opacity-70';\r\n    });\r\n\r\n    const iconSize = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'sm';\r\n        default:\r\n          return 'md';\r\n      }\r\n    });\r\n\r\n    const btnColor = computed(() => {\r\n      switch (props.type) {\r\n        case 'warning':\r\n          return 'yellow';\r\n        case 'error':\r\n          return 'red';\r\n        default:\r\n          return 'gray';\r\n      }\r\n    });\r\n\r\n    const actionClasses = computed(() => ({\r\n      'pl-4': !props.description && !slots.default,\r\n      'mt-1': !!props.description || slots.default,\r\n    }));\r\n\r\n    return {\r\n      classes,\r\n      containerClasses,\r\n      contentClasses,\r\n      iconClasses,\r\n      iconSize,\r\n      titleClasses,\r\n      textSizeClass,\r\n      descriptionColor,\r\n      btnColor,\r\n      actionClasses,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.bal-alert {\r\n  @apply inline-block font-medium;\r\n}\r\n\r\n.bal-alert-container {\r\n  @apply flex;\r\n}\r\n\r\n.bal-alert-content {\r\n  @apply flex whitespace-pre-wrap;\r\n\r\n  min-width: 0;\r\n}\r\n\r\n.bal-alert-icon {\r\n  @apply rounded-full flex items-center justify-center mr-2;\r\n}\r\n\r\n.bal-alert-description {\r\n  @apply overflow-hidden break-words;\r\n}\r\n</style>\r\n","<template>\r\n  <div :class=\"['bal-alert', classes]\">\r\n    <div :class=\"['bal-alert-container', containerClasses]\">\r\n      <div>\r\n        <div :class=\"['bal-alert-icon', iconClasses]\">\r\n          <LightBulbIcon v-if=\"type === 'tip'\"></LightBulbIcon>\r\n          <BalIcon v-else name=\"alert-circle\" :size=\"iconSize\" />\r\n        </div>\r\n      </div>\r\n      <div :class=\"['bal-alert-content', contentClasses]\">\r\n        <div>\r\n          <h5 :class=\"['bal-alert-title', titleClasses, textSizeClass]\">\r\n            <slot name=\"title\">\r\n              {{ title }}\r\n            </slot>\r\n          </h5>\r\n          <p\r\n            v-if=\"$slots.default || description\"\r\n            :class=\"['bal-alert-description', descriptionColor, textSizeClass]\"\r\n          >\r\n            <slot>\r\n              {{ description }}\r\n            </slot>\r\n          </p>\r\n        </div>\r\n        <div v-if=\"actionLabel\" :class=\"[actionClasses]\">\r\n          <BalBtn :color=\"btnColor\" size=\"xs\" @click=\"$emit('action-click')\">\r\n            {{ actionLabel }}\r\n          </BalBtn>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType } from 'vue';\r\n\r\nimport BalBtn from '../BalBtn/BalBtn.vue';\r\nimport BalIcon from '../BalIcon/BalIcon.vue';\r\n\r\ntype AlertType = 'warning' | 'error' | 'info' | 'tip';\r\n\r\nexport default defineComponent({\r\n  name: 'BalAlert',\r\n\r\n  components: {\r\n    BalIcon,\r\n    BalBtn,\r\n  },\r\n\r\n  props: {\r\n    type: { type: String as PropType<AlertType>, default: 'info' },\r\n    size: {\r\n      type: String,\r\n      default: 'md',\r\n      validator: (val: string): boolean => ['sm', 'md', 'lg'].includes(val),\r\n    },\r\n    title: { type: String, default: 'A title message' },\r\n    description: { type: String, default: '' },\r\n    actionLabel: { type: String, default: '' },\r\n    raised: { type: Boolean, default: false },\r\n    block: { type: Boolean, default: false },\r\n    contentClass: { type: String, default: '' },\r\n    square: { type: Boolean, default: false },\r\n    noBorder: { type: Boolean, default: false },\r\n  },\r\n\r\n  emits: ['action-click'],\r\n\r\n  setup(props, { slots }) {\r\n    const bgColorClass = computed(() => {\r\n      switch (props.type) {\r\n        case 'tip':\r\n          return 'bg-blue-50 dark:bg-blue-500 dark:bg-opacity-10 border-blue-200 dark:border-blue-500 text-black dark:text-white';\r\n        case 'warning':\r\n          return 'bg-orange-50 dark:bg-orange-600/10 border-orange-200 dark:border-orange-700 text-black dark:text-white';\r\n        case 'error':\r\n          return 'bg-red-50 dark:bg-red-500/10 border-red-200 dark:border-red-900 text-black dark:text-white';\r\n        default:\r\n          return 'bg-gray-100 dark:bg-gray-500 dark:border-0 border-gray-200 text-black dark:text-white';\r\n      }\r\n    });\r\n\r\n    const paddingClasses = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'p-1';\r\n        default:\r\n          return 'p-2';\r\n      }\r\n    });\r\n\r\n    const textSizeClass = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'text-xs';\r\n        case 'lg':\r\n          return 'text-base';\r\n        default:\r\n          return 'text-sm';\r\n      }\r\n    });\r\n\r\n    const classes = computed(() => {\r\n      return {\r\n        [bgColorClass.value]: true,\r\n        [paddingClasses.value]: true,\r\n        'shadow-sm': props.raised,\r\n        'w-full': props.block,\r\n        'rounded-lg': !props.square,\r\n        border: !props.noBorder,\r\n      };\r\n    });\r\n\r\n    const containerClasses = computed(() => ({\r\n      'items-center': !props.description && !slots.default,\r\n    }));\r\n\r\n    const contentClasses = computed(() => [\r\n      props.contentClass,\r\n      {\r\n        'items-center': !props.description && !slots.default,\r\n        'flex-col': !!props.description || slots.default,\r\n      },\r\n    ]);\r\n\r\n    const iconSizeClasses = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'w-5 h-5';\r\n        case 'lg':\r\n          return 'w-7 h-7';\r\n        default:\r\n          return 'w-6 h-6';\r\n      }\r\n    });\r\n\r\n    const iconColorClasses = computed(() => {\r\n      switch (props.type) {\r\n        case 'tip':\r\n          return 'text-blue-700 dark:text-blue-400';\r\n        case 'warning':\r\n          return 'text-orange-500 dark:text-white bg-orange-500/10 dark:bg-white/10';\r\n        case 'error':\r\n          return 'text-red-500 dark:text-white bg-red-500/10 dark:bg-white/10';\r\n        default:\r\n          return 'text-secondary dark:text-white bg-black/10 dark:bg-white/10';\r\n      }\r\n    });\r\n\r\n    const iconClasses = computed(() => {\r\n      return {\r\n        [iconSizeClasses.value]: true,\r\n        [iconColorClasses.value]: true,\r\n      };\r\n    });\r\n\r\n    const titleClasses = computed(() => ({\r\n      'font-semibold': !!props.description || slots.default,\r\n    }));\r\n\r\n    const descriptionColor = computed(() => {\r\n      if (props.type === 'tip') return 'text-black dark:text-white';\r\n      return 'text-black dark:text-white text-opacity-70';\r\n    });\r\n\r\n    const iconSize = computed(() => {\r\n      switch (props.size) {\r\n        case 'sm':\r\n          return 'sm';\r\n        default:\r\n          return 'md';\r\n      }\r\n    });\r\n\r\n    const btnColor = computed(() => {\r\n      switch (props.type) {\r\n        case 'warning':\r\n          return 'yellow';\r\n        case 'error':\r\n          return 'red';\r\n        default:\r\n          return 'gray';\r\n      }\r\n    });\r\n\r\n    const actionClasses = computed(() => ({\r\n      'pl-4': !props.description && !slots.default,\r\n      'mt-1': !!props.description || slots.default,\r\n    }));\r\n\r\n    return {\r\n      classes,\r\n      containerClasses,\r\n      contentClasses,\r\n      iconClasses,\r\n      iconSize,\r\n      titleClasses,\r\n      textSizeClass,\r\n      descriptionColor,\r\n      btnColor,\r\n      actionClasses,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.bal-alert {\r\n  @apply inline-block font-medium;\r\n}\r\n\r\n.bal-alert-container {\r\n  @apply flex;\r\n}\r\n\r\n.bal-alert-content {\r\n  @apply flex whitespace-pre-wrap;\r\n\r\n  min-width: 0;\r\n}\r\n\r\n.bal-alert-icon {\r\n  @apply rounded-full flex items-center justify-center mr-2;\r\n}\r\n\r\n.bal-alert-description {\r\n  @apply overflow-hidden break-words;\r\n}\r\n</style>\r\n","import { useI18n } from 'vue-i18n';\r\n\r\nimport { TransactionError } from '@/types/transactions';\r\n\r\nexport default function useTranasactionErrors() {\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { t } = useI18n();\r\n\r\n  /**\r\n   * ERRORS\r\n   */\r\n  const gasTooLowError: TransactionError = {\r\n    title: t('transactionErrors.gasTooLow.title'),\r\n    description: t('transactionErrors.gasTooLow.description'),\r\n  };\r\n\r\n  const cannotEstimateGasError: TransactionError = {\r\n    title: t('transactionErrors.cannotEstGas.title'),\r\n    description: t('transactionErrors.cannotEstGas.description'),\r\n  };\r\n\r\n  const slippageError: TransactionError = {\r\n    title: t('transactionErrors.slippage.title'),\r\n    description: t('transactionErrors.slippage.description'),\r\n  };\r\n\r\n  function defaultError(message = ''): TransactionError {\r\n    return {\r\n      title: t('transactionErrors.default.title'),\r\n      description: message.trim(),\r\n    };\r\n  }\r\n\r\n  function isUserRejected(error): boolean {\r\n    return (\r\n      (error?.code && error.code === 4001) ||\r\n      (error?.message && error.message.includes('user rejected transaction')) ||\r\n      (error?.cause &&\r\n        error.cause.message.includes('user rejected transaction'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * METHODS\r\n   */\r\n  function parseError(error): TransactionError | null {\r\n    if (isUserRejected(error)) return null; // User rejected transaction\r\n    if (error?.code && error.code === 'UNPREDICTABLE_GAS_LIMIT')\r\n      return cannotEstimateGasError;\r\n\r\n    if (error?.message) {\r\n      if (error.message.includes('-32010')) return gasTooLowError;\r\n      if (error.message.includes('BAL#507')) return slippageError;\r\n\r\n      return defaultError(error.message);\r\n    }\r\n\r\n    return defaultError();\r\n  }\r\n\r\n  return {\r\n    parseError,\r\n    isUserRejected,\r\n  };\r\n}\r\n"],"names":["_hoisted_1","_sfc_render","_ctx","_cache","_sfc_main","defineComponent","BalIcon","BalBtn","val","props","slots","bgColorClass","computed","paddingClasses","textSizeClass","classes","containerClasses","contentClasses","iconSizeClasses","iconColorClasses","iconClasses","titleClasses","descriptionColor","iconSize","btnColor","actionClasses","__unplugin_components_2","_createElementVNode","_openBlock","_createElementBlock","_createVNode","_component_BalBtn","$event","useTranasactionErrors","t","useI18n","gasTooLowError","cannotEstimateGasError","slippageError","defaultError","message","isUserRejected","error","parseError"],"mappings":"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"}