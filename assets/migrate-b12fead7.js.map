{"version":3,"file":"migrate-b12fead7.js","sources":["../../src/components/forms/pool_actions/MigrateForm/components/MigrateExplainer.vue","../../src/components/forms/pool_actions/MigrateForm/components/MigratePreviewModal/components/MigrateActions.vue","../../src/components/forms/pool_actions/MigrateForm/components/MigratePreviewModal/components/MigratePoolsInfo.vue","../../src/composables/pools/usePoolMigration.ts","../../src/components/forms/pool_actions/MigrateForm/components/MigratePreviewModal/components/MigrateSummary.vue","../../src/components/forms/pool_actions/MigrateForm/components/MigratePreviewModal/MigratePreviewModal.vue","../../src/components/forms/pool_actions/MigrateForm/components/PoolsInfo/components/PoolInfoBreakdown.vue","../../src/components/forms/pool_actions/MigrateForm/components/PoolsInfo/PoolsInfo.vue","../../src/components/forms/pool_actions/MigrateForm/components/PoolStats.vue","../../src/components/forms/pool_actions/MigrateForm/MigrateForm.vue","../../src/pages/pool/migrate.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport {\r\n  PoolMigrationInfo,\r\n  PoolMigrationType,\r\n} from '@/components/forms/pool_actions/MigrateForm/types';\r\nimport { computed } from 'vue';\r\n\r\ntype Props = {\r\n  poolMigrationInfo: PoolMigrationInfo;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst isStabal3Migration = computed(\r\n  () => props.poolMigrationInfo.type === PoolMigrationType.STABAL3_POOL\r\n);\r\n</script>\r\n\r\n<template>\r\n  <BalCard noPad shadow=\"none\" class=\"mb-5\">\r\n    <div class=\"p-4 w-full border-b dark:border-gray-900\">\r\n      <h6>\r\n        {{ $t(`migratePool.migrateReason.title`) }}\r\n      </h6>\r\n    </div>\r\n    <div class=\"p-4 -mt-2\">\r\n      <div class=\"text-sm text-secondary\">\r\n        {{ $t(`migratePool.migrateReason.description`) }}\r\n      </div>\r\n    </div>\r\n  </BalCard>\r\n\r\n  <BalCard v-if=\"isStabal3Migration\" noPad shadow=\"none\">\r\n    <div class=\"p-4 w-full border-b dark:border-gray-900\">\r\n      <h6>\r\n        {{ $t(`migratePool.${poolMigrationInfo.type}.whyMigrate.title`) }}\r\n      </h6>\r\n    </div>\r\n    <div class=\"p-4 -mt-2\">\r\n      <div class=\"text-sm text-secondary\">\r\n        {{ $t(`migratePool.${poolMigrationInfo.type}.whyMigrate.description`) }}\r\n      </div>\r\n    </div>\r\n  </BalCard>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed } from 'vue';\r\nimport { MigratePoolState } from '@/composables/pools/usePoolMigration';\r\n\r\nimport useConfig from '@/composables/useConfig';\r\n// Types\r\nimport { Pool } from '@/services/pool/types';\r\n// Composables\r\nimport useWeb3 from '@/services/web3/useWeb3';\r\nimport { TransactionActionInfo } from '@/types/transactions';\r\nimport useNetwork from '@/composables/useNetwork';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  fromPool: Pool;\r\n  toPool: Pool;\r\n  disabled?: boolean;\r\n  actions: TransactionActionInfo[];\r\n  migratePoolState: MigratePoolState;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = defineProps<Props>();\r\ndefineEmits(['setCurrentActionIndex']);\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { networkConfig } = useConfig();\r\nconst { explorerLinks } = useWeb3();\r\nconst { networkSlug } = useNetwork();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst explorerLink = computed(() =>\r\n  props.migratePoolState.receipt\r\n    ? explorerLinks.txLink(props.migratePoolState.receipt.transactionHash)\r\n    : ''\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <BalActionSteps\r\n      v-if=\"!migratePoolState.confirmed\"\r\n      :actions=\"actions\"\r\n      :disabled=\"disabled\"\r\n      @set-current-action-index=\"$emit('setCurrentActionIndex', $event)\"\r\n    />\r\n    <template v-else>\r\n      <div\r\n        class=\"flex justify-between items-center mt-4 text-sm text-gray-400 dark:text-gray-600\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <BalIcon name=\"clock\" />\r\n          <span class=\"ml-2\">\r\n            {{ migratePoolState.confirmedAt }}\r\n          </span>\r\n        </div>\r\n        <BalLink\r\n          :href=\"explorerLink\"\r\n          external\r\n          noStyle\r\n          class=\"group flex items-center\"\r\n        >\r\n          {{ networkConfig.explorerName }}\r\n          <BalIcon\r\n            name=\"arrow-up-right\"\r\n            size=\"sm\"\r\n            class=\"ml-px group-hover:text-pink-500 transition-colors\"\r\n          />\r\n        </BalLink>\r\n      </div>\r\n      <BalBtn\r\n        tag=\"router-link\"\r\n        :to=\"{\r\n          name: 'pool',\r\n          params: { networkSlug, id: toPool.id },\r\n        }\"\r\n        color=\"gray\"\r\n        outline\r\n        block\r\n        class=\"mt-2\"\r\n      >\r\n        {{ $t('goToMigratedPool') }}\r\n      </BalBtn>\r\n    </template>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { Pool } from '@/services/pool/types';\r\nimport { TokenInfo } from '@/types/TokenList';\r\nimport { computed } from 'vue';\r\nimport { POOL_MIGRATIONS_MAP } from '../../../constants';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  fromPool: Pool;\r\n  fromPoolTokenInfo: TokenInfo;\r\n  toPoolTokenInfo: TokenInfo;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst showOldVHint = computed(\r\n  () => POOL_MIGRATIONS_MAP[props.fromPool.id]?.showOldVHint\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"relative mt-4 rounded-lg border dark:border-gray-700 divide-y dark:divide-gray-700\"\r\n  >\r\n    <div class=\"flex items-center p-3\">\r\n      <BalAsset :address=\"fromPoolTokenInfo.address\" class=\"mr-3\" :size=\"36\" />\r\n      <div class=\"font-semibold\">{{ fromPoolTokenInfo.symbol }}</div>\r\n      <div v-if=\"showOldVHint\" class=\"ml-2\">\r\n        ({{ $t('migratePool.oldVersion') }})\r\n      </div>\r\n    </div>\r\n    <div class=\"arrow-container\">\r\n      <ArrowDownIcon />\r\n    </div>\r\n    <div class=\"flex items-center p-3 border-t dark:border-gray-900\">\r\n      <BalAsset :address=\"toPoolTokenInfo.address\" class=\"mr-3\" :size=\"36\" />\r\n      <div class=\"font-semibold\">{{ toPoolTokenInfo.symbol }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style scoped>\r\n.card-container {\r\n  @apply relative mt-4;\r\n  @apply border dark:border-gray-700 rounded-lg;\r\n}\r\n\r\n.arrow-container {\r\n  @apply absolute right-0 top-1/2 transform -translate-y-1/2 -translate-x-1/2;\r\n  @apply p-2;\r\n  @apply rounded-full border dark:border-gray-900 bg-white dark:bg-gray-700 dark:text-gray-400;\r\n}\r\n</style>\r\n","import { RelayerAuthorization } from '@balancer-labs/sdk';\r\nimport {\r\n  TransactionReceipt,\r\n  TransactionResponse,\r\n} from '@ethersproject/abstract-provider';\r\nimport { computed, Ref, ref } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nimport { POOL_MIGRATIONS } from '@/components/forms/pool_actions/MigrateForm/constants';\r\nimport { PoolMigrationType } from '@/components/forms/pool_actions/MigrateForm/types';\r\nimport { getBalancer } from '@/dependencies/balancer-sdk';\r\nimport { balancerContractsService } from '@/services/balancer/contracts/balancer-contracts.service';\r\nimport { configService } from '@/services/config/config.service';\r\nimport { Pool } from '@/services/pool/types';\r\nimport useWeb3 from '@/services/web3/useWeb3';\r\nimport { TransactionActionInfo } from '@/types/transactions';\r\n\r\nimport useEthers from '../useEthers';\r\nimport useTransactions from '../useTransactions';\r\nimport { parseUnits } from '@ethersproject/units';\r\nimport useTime, { dateTimeLabelFor } from '../useTime';\r\nimport { TokenInfo } from '@/types/TokenList';\r\nimport { fiatValueOf, tokensListExclBpt } from '../usePool';\r\nimport useNumbers, { FNumFormats } from '../useNumbers';\r\nimport useSlippage from '../useSlippage';\r\nimport { TransactionBuilder } from '@/services/web3/transactions/transaction.builder';\r\nimport { usePoolStaking } from '@/providers/local/pool-staking.provider';\r\n\r\nexport type MigratePoolState = {\r\n  init: boolean;\r\n  confirming: boolean;\r\n  confirmed: boolean;\r\n  confirmedAt: string;\r\n  receipt?: TransactionReceipt;\r\n};\r\n\r\nexport function usePoolMigration(\r\n  stakedBptBalance: string,\r\n  unstakedBptBalance: string,\r\n  unstakedAmount = '0',\r\n  isUnstakedMigrationEnabled: boolean,\r\n  stakedAmount = '0',\r\n  isStakedMigrationEnabled: boolean,\r\n  fromPool: Pool,\r\n  toPool: Pool,\r\n  fromPoolTokenInfo: TokenInfo,\r\n  toPoolTokenInfo: TokenInfo,\r\n  relayerApproval: Ref<boolean | undefined>,\r\n  currentActionIndex: Ref<number>\r\n) {\r\n  const balancer = getBalancer();\r\n  /**\r\n   * COMPOSABLES\r\n   */\r\n  const { txListener, getTxConfirmedAt } = useEthers();\r\n  const { addTransaction } = useTransactions();\r\n  const { account, getSigner } = useWeb3();\r\n  const { t } = useI18n();\r\n  const { oneHourInMs } = useTime();\r\n  const { fNum } = useNumbers();\r\n  const { minusSlippageScaled } = useSlippage();\r\n  const { fetchPreferentialGaugeAddress } = usePoolStaking();\r\n\r\n  /**\r\n   * STATE\r\n   */\r\n  const migratePoolState = ref<MigratePoolState>({\r\n    init: false,\r\n    confirming: false,\r\n    confirmed: false,\r\n    confirmedAt: '',\r\n  });\r\n  const signature = ref('');\r\n  const stakedAction = {\r\n    label: t('migratePool.previewModal.actions.staked.title'),\r\n    loadingLabel: t('migratePool.previewModal.actions.loading'),\r\n    confirmingLabel: t('migratePool.confirming'),\r\n    action: migrate.bind(\r\n      null,\r\n      parseUnits(stakedBptBalance, fromPool.onchain?.decimals).toString(),\r\n      true\r\n    ),\r\n    stepTooltip: t('migratePool.previewModal.actions.migrationStep'),\r\n    isSignAction: false,\r\n    isStakeAction: true,\r\n  };\r\n\r\n  const unstakedAction = {\r\n    label: t('migratePool.previewModal.actions.unstaked.title'),\r\n    loadingLabel: t('migratePool.previewModal.actions.loading'),\r\n    confirmingLabel: t('migratePool.confirming'),\r\n    action: migrate.bind(\r\n      null,\r\n      parseUnits(unstakedBptBalance, fromPool.onchain?.decimals).toString(),\r\n      false\r\n    ),\r\n    stepTooltip: t('migratePool.previewModal.actions.migrationStep'),\r\n    isSignAction: false,\r\n    isUnstakeAction: true,\r\n  };\r\n\r\n  const signAction = {\r\n    label: t('migratePool.approve'),\r\n    loadingLabel: t('checkWallet'),\r\n    confirmingLabel: t('migratePool.approving'),\r\n    stepTooltip: t('approveBatchRelayerTooltip'),\r\n    action: getUserSignature as () => Promise<any>,\r\n    isSignAction: true,\r\n  };\r\n\r\n  /**\r\n   * COMPUTED\r\n   */\r\n  const actions = computed(() => {\r\n    const arr: TransactionActionInfo[] = [];\r\n\r\n    if (isStakedMigrationEnabled) arr.push(stakedAction);\r\n\r\n    if (isUnstakedMigrationEnabled) {\r\n      // the biggest one is migrated first\r\n      Number(unstakedAmount) > Number(stakedAmount)\r\n        ? arr.unshift(unstakedAction)\r\n        : arr.push(unstakedAction);\r\n    }\r\n\r\n    if (!relayerApproval.value) arr.unshift(signAction);\r\n\r\n    return arr;\r\n  });\r\n\r\n  const migrationType = computed(() => {\r\n    return POOL_MIGRATIONS.find(\r\n      migration => migration.fromPoolId === fromPool.id\r\n    );\r\n  });\r\n\r\n  const migrationFn = computed(() => {\r\n    switch (migrationType.value?.type) {\r\n      case PoolMigrationType.AAVE_BOOSTED_POOL:\r\n        return migrateBoostedPool;\r\n\r\n      case PoolMigrationType.STABAL3_POOL:\r\n        return migrateStabal3;\r\n\r\n      case PoolMigrationType.STMATIC_POOL:\r\n      case PoolMigrationType.XMATIC_POOL:\r\n        return migrateStables;\r\n\r\n      case PoolMigrationType.MAI_POOL:\r\n        return migrateMaiUsd;\r\n\r\n      default:\r\n        return migrateBoostedPool;\r\n    }\r\n  });\r\n\r\n  const migrationData = computed(() => {\r\n    const signer = getSigner();\r\n    const signerAddress = account.value;\r\n    const _signature = relayerApproval.value ? undefined : signature.value;\r\n    const _tokens = fromPool.tokens\r\n      .filter(\r\n        token => token.address.toLowerCase() !== fromPool.address.toLowerCase()\r\n      )\r\n      .map(token =>\r\n        parseUnits(token.balance, fromPool.onchain?.decimals || 18).toString()\r\n      );\r\n\r\n    return {\r\n      signer,\r\n      signerAddress,\r\n      _signature,\r\n      _tokens,\r\n    };\r\n  });\r\n\r\n  const fromFiatTotal = computed((): string => {\r\n    if (actions.value[currentActionIndex.value].isStakeAction) {\r\n      return fiatValueOf(fromPool, stakedBptBalance);\r\n    } else if (actions.value[currentActionIndex.value].isUnstakeAction) {\r\n      return fiatValueOf(fromPool, unstakedBptBalance);\r\n    } else {\r\n      return '0';\r\n    }\r\n  });\r\n\r\n  const fromFiatTotalLabel = computed((): string => {\r\n    return fNum(fromFiatTotal.value, FNumFormats.fiat);\r\n  });\r\n\r\n  /**\r\n   * METHODS\r\n   */\r\n  async function getUserSignature(): Promise<string> {\r\n    try {\r\n      const deadline = new Date().getTime() + oneHourInMs / 2;\r\n      const vaultInstance = balancerContractsService.vault?.instance;\r\n      const nonce = await vaultInstance.getNextNonce(account.value);\r\n      const relayerAddress = configService.network.addresses.batchRelayer;\r\n      const calldata = vaultInstance.interface.encodeFunctionData(\r\n        'setRelayerApproval',\r\n        [account.value, relayerAddress, true]\r\n      );\r\n\r\n      const _signature =\r\n        await RelayerAuthorization.signSetRelayerApprovalAuthorization(\r\n          vaultInstance,\r\n          getSigner(),\r\n          relayerAddress,\r\n          calldata,\r\n          deadline,\r\n          nonce\r\n        );\r\n\r\n      const encodedSign = RelayerAuthorization.encodeCalldataAuthorization(\r\n        '0x',\r\n        deadline,\r\n        _signature\r\n      );\r\n\r\n      signature.value = encodedSign;\r\n      return signature.value;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async function migrate(\r\n    amount: string,\r\n    isStaked: boolean\r\n  ): Promise<TransactionResponse> {\r\n    let query = await migrationFn.value(amount, isStaked, '0');\r\n\r\n    const expectedBptOut = await getExpectedBptOut(amount, isStaked);\r\n    const minBptOut = minusSlippageScaled(expectedBptOut);\r\n    query = await migrationFn.value(amount, isStaked, minBptOut);\r\n\r\n    const txBuilder = new TransactionBuilder(getSigner());\r\n    const tx = await txBuilder.raw.sendTransaction({\r\n      to: query.to,\r\n      data: query.data,\r\n    });\r\n\r\n    handleTransaction(tx);\r\n    return tx;\r\n  }\r\n\r\n  async function handleTransaction(tx: TransactionResponse): Promise<void> {\r\n    addTransaction({\r\n      id: tx.hash,\r\n      type: 'tx',\r\n      action: 'migratePool',\r\n      summary: t('transactionSummary.migratePool', [\r\n        fromFiatTotalLabel.value,\r\n        fromPoolTokenInfo.symbol,\r\n        toPoolTokenInfo.symbol,\r\n      ]),\r\n      details: {\r\n        fromPool: fromPool,\r\n        toPool: toPool,\r\n        totalFiatPoolInvestment: fromFiatTotalLabel.value,\r\n      },\r\n    });\r\n\r\n    const txResult = await txListener(tx, {\r\n      onTxConfirmed: async (receipt: TransactionReceipt) => {\r\n        migratePoolState.value.confirming = false;\r\n        migratePoolState.value.receipt = receipt;\r\n        const confirmedAt = await getTxConfirmedAt(receipt);\r\n        migratePoolState.value.confirmedAt = dateTimeLabelFor(confirmedAt);\r\n      },\r\n      onTxFailed: () => {\r\n        migratePoolState.value.confirming = false;\r\n      },\r\n    });\r\n\r\n    if (currentActionIndex.value + 1 === actions.value.length) {\r\n      migratePoolState.value.confirmed = txResult;\r\n    }\r\n  }\r\n\r\n  async function getExpectedBptOut(\r\n    bptIn: string,\r\n    isStaked: boolean\r\n  ): Promise<string> {\r\n    const query = await migrationFn.value(bptIn, isStaked, '0');\r\n\r\n    const txBuilder = new TransactionBuilder(getSigner());\r\n    const staticResult = await txBuilder.raw.call({\r\n      to: query.to,\r\n      data: query.data,\r\n    });\r\n\r\n    return query.decode(staticResult, isStaked);\r\n  }\r\n\r\n  function migrateBoostedPool(bptIn: string, staked: boolean, minBptOut = '0') {\r\n    const { signerAddress, _signature, _tokens } = migrationData.value;\r\n\r\n    return getBalancer().zaps.migrations.bbaUsd(\r\n      signerAddress,\r\n      bptIn,\r\n      minBptOut,\r\n      staked,\r\n      _tokens,\r\n      _signature\r\n    );\r\n  }\r\n\r\n  function migrateStabal3(bptIn: string, staked: boolean, minBptOut = '0') {\r\n    const { signerAddress, _signature } = migrationData.value;\r\n\r\n    return getBalancer().zaps.migrations.stabal3(\r\n      signerAddress,\r\n      bptIn,\r\n      minBptOut,\r\n      staked,\r\n      _signature\r\n    );\r\n  }\r\n\r\n  async function migrateStables(\r\n    bptIn: string,\r\n    staked: boolean,\r\n    minBptOut = '0'\r\n  ) {\r\n    const { signerAddress, _signature } = migrationData.value;\r\n\r\n    const fromData = {\r\n      id: fromPool.id,\r\n      address: fromPool.address,\r\n    };\r\n\r\n    const toData = {\r\n      id: toPool.id,\r\n      address: toPool.address,\r\n    };\r\n\r\n    if (staked) {\r\n      const [fromGaugeAddress, toGaugeAddress] = await Promise.all([\r\n        fetchPreferentialGaugeAddress(fromPool.address),\r\n        fetchPreferentialGaugeAddress(toPool.address),\r\n      ]);\r\n      fromData['gauge'] = fromGaugeAddress;\r\n      toData['gauge'] = toGaugeAddress;\r\n    }\r\n\r\n    return balancer.zaps.migrations.stables(\r\n      signerAddress,\r\n      fromData,\r\n      toData,\r\n      bptIn,\r\n      minBptOut,\r\n      staked,\r\n      [...tokensListExclBpt(fromPool)],\r\n      _signature\r\n    );\r\n  }\r\n\r\n  function migrateMaiUsd(bptIn: string, staked: boolean, minBptOut = '0') {\r\n    const { signerAddress, _signature } = migrationData.value;\r\n\r\n    return balancer.zaps.migrations.maiusd(\r\n      signerAddress,\r\n      bptIn,\r\n      minBptOut,\r\n      staked,\r\n      _signature\r\n    );\r\n  }\r\n\r\n  return {\r\n    getUserSignature,\r\n    migrate,\r\n    actions,\r\n    migratePoolState,\r\n    getExpectedBptOut,\r\n    fromFiatTotal,\r\n  };\r\n}\r\n","<script setup lang=\"ts\">\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\nimport { Pool } from '@/services/pool/types';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  pool: Pool;\r\n  fromTotal: string;\r\n  toTotal: string;\r\n  priceImpact: number;\r\n  isLoadingBptOut?: boolean;\r\n  highPriceImpact?: boolean;\r\n  summaryTitle?: string | undefined;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nwithDefaults(defineProps<Props>(), {\r\n  isLoadingPriceImpact: false,\r\n  highPriceImpact: false,\r\n  summaryTitle: undefined,\r\n});\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { fNum } = useNumbers();\r\n</script>\r\n\r\n<template>\r\n  <div class=\"summary-table\">\r\n    <h6 class=\"p-2\">{{ summaryTitle || $t('summary') }}</h6>\r\n    <div class=\"flex flex-col py-2\">\r\n      <div class=\"summary-table-row\">\r\n        <div class=\"summary-table-label\">\r\n          {{ $t('totalToMigrate') }}\r\n        </div>\r\n        <div class=\"summary-table-number\">\r\n          ~{{ fNum(fromTotal, FNumFormats.fiat) }}\r\n          <BalTooltip\r\n            :text=\"$t('migratePool.tooltips.totalTo')\"\r\n            iconSize=\"sm\"\r\n            class=\"ml-2\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"summary-table-row\">\r\n        <div class=\"summary-table-label\">\r\n          {{ $t('newTotal') }}\r\n        </div>\r\n        <div class=\"summary-table-number\">\r\n          ~{{ fNum(toTotal, FNumFormats.fiat) }}\r\n          <BalTooltip\r\n            :text=\"$t('migratePool.tooltips.newTotal')\"\r\n            iconSize=\"sm\"\r\n            class=\"ml-2\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        :class=\"[\r\n          'summary-table-row',\r\n          {\r\n            'bg-red-50 dark:bg-red-500 text-red-500 dark:text-white':\r\n              highPriceImpact,\r\n          },\r\n        ]\"\r\n      >\r\n        <div class=\"summary-table-label\">\r\n          {{ $t('priceImpact') }}\r\n        </div>\r\n        <div class=\"summary-table-number\">\r\n          <BalLoadingBlock v-if=\"isLoadingBptOut\" class=\"w-10 h-6\" />\r\n          <template v-else>\r\n            {{ fNum(priceImpact, FNumFormats.percent) }}\r\n            <BalTooltip\r\n              :text=\"$t('tooltips.addLiquidity.priceImpact')\"\r\n              iconSize=\"sm\"\r\n              :iconName=\"highPriceImpact ? 'alert-triangle' : 'info'\"\r\n              :iconClass=\"\r\n                highPriceImpact\r\n                  ? 'text-red-500 dark:text-white'\r\n                  : 'text-gray-300'\r\n              \"\r\n              width=\"72\"\r\n              class=\"ml-2\"\r\n            />\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.summary-table {\r\n  @apply border dark:border-gray-700 divide-y dark:divide-gray-700 rounded-lg mt-4;\r\n}\r\n\r\n.summary-table-row {\r\n  @apply grid grid-cols-2 px-2 py-1;\r\n}\r\n\r\n.summary-table-label {\r\n  @apply flex items-center;\r\n}\r\n\r\n.summary-table-number {\r\n  @apply flex items-center justify-end;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, toRefs, watch } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nimport { Pool } from '@/services/pool/types';\r\nimport { TokenInfo } from '@/types/TokenList';\r\n\r\nimport { PoolMigrationInfo } from '../../types';\r\nimport MigrateActions from './components/MigrateActions.vue';\r\nimport MigratePoolRisks from './components/MigratePoolRisks.vue';\r\nimport MigratePoolsInfo from './components/MigratePoolsInfo.vue';\r\nimport { configService } from '@/services/config/config.service';\r\nimport useRelayerApprovalQuery from '@/composables/queries/useRelayerApprovalQuery';\r\nimport { usePoolMigration } from '@/composables/pools/usePoolMigration';\r\nimport { bnum } from '@/lib/utils';\r\nimport { HIGH_PRICE_IMPACT } from '@/constants/poolLiquidity';\r\nimport { fiatValueOf } from '@/composables/usePool';\r\nimport { formatUnits, parseUnits } from '@ethersproject/units';\r\nimport MigrateSummary from './components/MigrateSummary.vue';\r\n\r\n/**\r\n * TYPES\r\n */\r\ntype Props = {\r\n  poolMigrationInfo: PoolMigrationInfo;\r\n  fromPool: Pool;\r\n  toPool: Pool;\r\n  fromPoolTokenInfo: TokenInfo;\r\n  toPoolTokenInfo: TokenInfo;\r\n  stakedPoolValue?: string;\r\n  unstakedPoolValue?: string;\r\n  stakedBptBalance: string;\r\n  unstakedBptBalance: string;\r\n  isStakedMigrationEnabled: boolean;\r\n  isUnstakedMigrationEnabled: boolean;\r\n};\r\n\r\n/**\r\n * PROPS & EMITS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'close'): void;\r\n}>();\r\nconst { fromPool, toPool } = toRefs(props);\r\n\r\n/**\r\n * STATE\r\n */\r\nconst currentActionIndex = ref(0);\r\nconst priceImpact = ref(1);\r\nconst bptOut = ref('0');\r\nconst bptOutLoading = ref(true);\r\nconst highPriceImpactAccepted = ref(false);\r\nconst relayerAddress = ref(configService.network.addresses.batchRelayer);\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { t } = useI18n();\r\nconst relayerApproval = useRelayerApprovalQuery(relayerAddress);\r\nconst { actions, migratePoolState, getExpectedBptOut, fromFiatTotal } =\r\n  usePoolMigration(\r\n    props.stakedBptBalance,\r\n    props.unstakedBptBalance,\r\n    props.unstakedPoolValue,\r\n    props.isUnstakedMigrationEnabled,\r\n    props.stakedPoolValue,\r\n    props.isStakedMigrationEnabled,\r\n    props.fromPool,\r\n    props.toPool,\r\n    props.fromPoolTokenInfo,\r\n    props.toPoolTokenInfo,\r\n    relayerApproval.data,\r\n    currentActionIndex\r\n  );\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst title = computed((): string =>\r\n  migratePoolState.value.confirmed\r\n    ? t('migratePool.previewModal.titles.confirmed')\r\n    : t('migratePool.previewModal.titles.default')\r\n);\r\n\r\nconst hasAcceptedHighPriceImpact = computed((): boolean =>\r\n  highPriceImpact.value ? highPriceImpactAccepted.value : true\r\n);\r\n\r\nconst highPriceImpact = computed((): boolean => {\r\n  if (bptOutLoading.value) return false;\r\n  return bnum(priceImpact.value).isGreaterThanOrEqualTo(HIGH_PRICE_IMPACT);\r\n});\r\n\r\nconst isInvestSummaryShown = computed(\r\n  () =>\r\n    !actions.value[currentActionIndex.value].isSignAction &&\r\n    !migratePoolState.value.confirmed\r\n);\r\n\r\nconst isActionBtnDisabled = computed(() => {\r\n  if (actions.value[currentActionIndex.value].isSignAction) {\r\n    return false;\r\n  }\r\n  return bptOutLoading.value || !hasAcceptedHighPriceImpact.value;\r\n});\r\n\r\nconst summaryTitle = computed(() => {\r\n  if (actions.value[currentActionIndex.value].isStakeAction) {\r\n    return t('migratePool.previewModal.summary.stakeTitle');\r\n  }\r\n  return t('migratePool.previewModal.summary.unstakeTitle');\r\n});\r\n\r\n/**\r\n * Converts stakedBptBalance to EVM scale.\r\n */\r\nconst evmStakedBptBalance = computed((): string => {\r\n  return parseUnits(\r\n    props.stakedBptBalance,\r\n    props.fromPool.onchain?.decimals\r\n  ).toString();\r\n});\r\n\r\n/**\r\n * Converts unstakedBptBalance to EVM scale.\r\n */\r\nconst evmUnstakedBptBalance = computed((): string => {\r\n  return parseUnits(\r\n    props.unstakedBptBalance,\r\n    props.fromPool.onchain?.decimals\r\n  ).toString();\r\n});\r\n\r\n// Computes fiat value of expected BPT out.\r\nconst toFiatTotal = computed((): string => {\r\n  const bpt = formatUnits(bptOut.value, toPool.value.onchain?.decimals || 18);\r\n  return fiatValueOf(toPool.value, bpt);\r\n});\r\n\r\n/**\r\n * METHODS\r\n */\r\nfunction handleClose() {\r\n  emit('close');\r\n}\r\n\r\nfunction setCurrentActionIndex(index: number) {\r\n  currentActionIndex.value = index;\r\n}\r\n\r\n/**\r\n * Calculates price impact given BPT of fromPool (EVM scaled).\r\n *\r\n * @param bptIn fromPool BPT in EVM scale, could be a staked or unstaked balance.\r\n * @param isStaked defines if the bptIn is a staked or unstaked balance.\r\n * @returns Approximate price impact as a fractional number.\r\n */\r\nasync function calcPriceImpact(\r\n  bptIn: string,\r\n  isStaked: boolean\r\n): Promise<number> {\r\n  bptOut.value = await calcBptOut(bptIn, isStaked);\r\n\r\n  const fromBptValue = fiatValueOf(fromPool.value, bptIn);\r\n  console.log('fromBptValue', fromBptValue);\r\n  const toBptValue = fiatValueOf(toPool.value, bptOut.value);\r\n  console.log('toBptValue', toBptValue);\r\n\r\n  return bnum(1).minus(bnum(toBptValue).div(fromBptValue)).toNumber();\r\n}\r\n\r\n/**\r\n * Calculates USD value of BPT out, i.e. the value you get after migration.\r\n * This calculation is based on coingecko prices so may not be accurate.\r\n *\r\n * @param bptIn fromPool BPT in EVM scale, could be a staked or unstaked balance.\r\n * @param isStaked defines if the bptIn is a staked or unstaked balance.\r\n * @returns Approximate BPT value (EVM scaled).\r\n */\r\nasync function calcBptOut(bptIn: string, isStaked: boolean): Promise<string> {\r\n  bptOutLoading.value = true;\r\n  const value = await getExpectedBptOut(bptIn, isStaked);\r\n  bptOutLoading.value = false;\r\n  return value;\r\n}\r\n\r\n/**\r\n * WATCHERS\r\n */\r\nwatch(\r\n  currentActionIndex,\r\n  async newIndex => {\r\n    if (actions.value[newIndex].isStakeAction)\r\n      priceImpact.value = await calcPriceImpact(\r\n        evmStakedBptBalance.value,\r\n        true\r\n      );\r\n\r\n    if (actions.value[newIndex].isUnstakeAction)\r\n      priceImpact.value = await calcPriceImpact(\r\n        evmUnstakedBptBalance.value,\r\n        false\r\n      );\r\n  },\r\n  { immediate: true }\r\n);\r\n</script>\r\n\r\n<template>\r\n  <BalModal show :fireworks=\"migratePoolState.confirmed\" @close=\"handleClose\">\r\n    <template #header>\r\n      <div class=\"flex items-center\">\r\n        <BalCircle\r\n          v-if=\"migratePoolState.confirmed\"\r\n          size=\"8\"\r\n          color=\"green\"\r\n          class=\"mr-2 text-white\"\r\n        >\r\n          <BalIcon name=\"check\" />\r\n        </BalCircle>\r\n        <h4>\r\n          {{ title }}\r\n        </h4>\r\n      </div>\r\n    </template>\r\n\r\n    <MigratePoolRisks\r\n      v-if=\"poolMigrationInfo.riskI18nLabels != null\"\r\n      :poolMigrationInfo=\"poolMigrationInfo\"\r\n    />\r\n\r\n    <MigratePoolsInfo\r\n      :fromPool=\"fromPool\"\r\n      :fromPoolTokenInfo=\"fromPoolTokenInfo\"\r\n      :toPoolTokenInfo=\"toPoolTokenInfo\"\r\n    />\r\n\r\n    <MigrateSummary\r\n      v-if=\"isInvestSummaryShown\"\r\n      :pool=\"toPool\"\r\n      :fromTotal=\"fromFiatTotal\"\r\n      :toTotal=\"toFiatTotal\"\r\n      :priceImpact=\"priceImpact\"\r\n      :isLoadingBptOut=\"bptOutLoading\"\r\n      :highPriceImpact=\"highPriceImpact\"\r\n      :summaryTitle=\"summaryTitle\"\r\n    />\r\n\r\n    <div\r\n      v-if=\"highPriceImpact && isInvestSummaryShown\"\r\n      class=\"p-3 mt-4 rounded-lg border dark:border-gray-700\"\r\n    >\r\n      <BalCheckbox\r\n        v-model=\"highPriceImpactAccepted\"\r\n        name=\"highPriceImpactAccepted\"\r\n        size=\"sm\"\r\n        :label=\"$t('migratePool.previewModal.priceImpactAccept')\"\r\n        noMargin\r\n      />\r\n    </div>\r\n\r\n    <MigrateActions\r\n      class=\"mt-4\"\r\n      :fromPool=\"fromPool\"\r\n      :toPool=\"toPool\"\r\n      :disabled=\"isActionBtnDisabled\"\r\n      :actions=\"actions\"\r\n      :migratePoolState=\"migratePoolState\"\r\n      @set-current-action-index=\"setCurrentActionIndex\"\r\n    />\r\n  </BalModal>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref } from 'vue';\r\n\r\nimport { useTokens } from '@/providers/tokens.provider';\r\nimport { Pool } from '@/services/pool/types';\r\nimport { TokenInfo } from '@/types/TokenList';\r\nimport { POOL_MIGRATIONS_MAP } from '../../../constants';\r\nimport { tokensListExclBpt } from '@/composables/usePool';\r\n\r\ntype Props = {\r\n  pool: Pool;\r\n  poolTokenInfo: TokenInfo;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * STATE\r\n */\r\nconst isExpanded = ref(false);\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { getToken } = useTokens();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst showOldVHint = computed(\r\n  () => POOL_MIGRATIONS_MAP[props.pool.id]?.showOldVHint\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"p-3 dark:bg-gray-800 rounded-lg border dark:border-gray-800\">\r\n    <BalBreakdown\r\n      :items=\"tokensListExclBpt(pool)\"\r\n      class=\"w-full cursor-pointer select-none\"\r\n      offsetClassOverrides=\"mt-4 ml-3\"\r\n      initVertBarClassOverrides=\"h-6 -mt-6\"\r\n      size=\"lg\"\r\n      :hideItems=\"!isExpanded\"\r\n      @click=\"isExpanded = !isExpanded\"\r\n    >\r\n      <div class=\"flex items-center\">\r\n        <BalAsset :address=\"pool.address\" class=\"mr-2\" :size=\"36\" />\r\n        <div>\r\n          <div class=\"font-semibold\">\r\n            {{ poolTokenInfo.symbol }}\r\n            <span v-if=\"showOldVHint\">\r\n              ({{ $t('migratePool.oldVersion') }})\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"text-sm text-secondary\">\r\n            {{ poolTokenInfo.name }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <template #item=\"{ item: address }\">\r\n        <div\r\n          class=\"inline-flex items-center py-1 px-2 ml-2 bg-gray-50 dark:bg-gray-700 rounded-lg border dark:border-gray-800\"\r\n        >\r\n          <BalAsset :address=\"address\" class=\"mr-2\" />\r\n          {{ getToken(address).symbol }}\r\n        </div>\r\n      </template>\r\n    </BalBreakdown>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, toRefs } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nimport SwapSettingsPopover, {\r\n  SwapSettingsContext,\r\n} from '@/components/popovers/SwapSettingsPopover.vue';\r\nimport useNumbers from '@/composables/useNumbers';\r\nimport { configService } from '@/services/config/config.service';\r\nimport { Pool } from '@/services/pool/types';\r\nimport { TokenInfo } from '@/types/TokenList';\r\n\r\nimport { PoolMigrationInfo } from '../../types';\r\nimport MigratePreviewModal from '../MigratePreviewModal/MigratePreviewModal.vue';\r\nimport PoolInfoBreakdown from './components/PoolInfoBreakdown.vue';\r\nimport { useTokens } from '@/providers/tokens.provider';\r\nimport { fiatValueOf } from '@/composables/usePool';\r\nimport { usePoolStaking } from '@/providers/local/pool-staking.provider';\r\n\r\ntype Props = {\r\n  poolMigrationInfo: PoolMigrationInfo;\r\n  fromPool: Pool;\r\n  toPool: Pool;\r\n  fromPoolTokenInfo: TokenInfo;\r\n  toPoolTokenInfo: TokenInfo;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { t } = useI18n();\r\nconst { fromPool, toPool } = toRefs(props);\r\nconst { fNum } = useNumbers();\r\nconst { balanceFor } = useTokens();\r\nconst { stakedShares } = usePoolStaking();\r\n\r\nconst fiatValueOfStakedShares = computed(() => {\r\n  return fiatValueOf(props.fromPool, stakedShares.value);\r\n});\r\n\r\nconst fiatValueOfUnstakedShares = computed(() => {\r\n  return fiatValueOf(props.fromPool, balanceFor(props.fromPool.address));\r\n});\r\n\r\nconst unstakedBptBalance = computed(() => {\r\n  return balanceFor(props.fromPool.address);\r\n});\r\n\r\nconst hasValue = computed(\r\n  () =>\r\n    Number(fiatValueOfUnstakedShares.value) > 0 ||\r\n    Number(fiatValueOfStakedShares.value) > 0\r\n);\r\n\r\nconst balanceLabel = computed(() => {\r\n  let balance = 0;\r\n  const stakedAmount = Number(fiatValueOfStakedShares.value);\r\n  const unstakedAmount = Number(fiatValueOfUnstakedShares.value);\r\n\r\n  balance = stakedAmount + unstakedAmount;\r\n\r\n  return balance > 0\r\n    ? fNum(balance, {\r\n        style: 'currency',\r\n        maximumFractionDigits: 0,\r\n        fixedFormat: true,\r\n      })\r\n    : '-';\r\n});\r\n\r\n/**\r\n * STATE\r\n */\r\nconst showPreviewModal = ref(false);\r\nconst migrateStakeChooseArr = ref({\r\n  staked: {\r\n    title: t('migratePool.poolInfo.stakedLabel'),\r\n    value: true,\r\n    amount: computed(() =>\r\n      fNum(fiatValueOfStakedShares.value, {\r\n        style: 'currency',\r\n        maximumFractionDigits: 0,\r\n        fixedFormat: true,\r\n      })\r\n    ),\r\n  },\r\n  unstaked: {\r\n    title: t('migratePool.poolInfo.unstakedLabel'),\r\n    value: true,\r\n    amount: computed(() =>\r\n      fNum(fiatValueOfUnstakedShares.value, {\r\n        style: 'currency',\r\n        maximumFractionDigits: 0,\r\n        fixedFormat: true,\r\n      })\r\n    ),\r\n  },\r\n});\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst isPreviewModalBtnDisabled = computed(() => {\r\n  return (\r\n    !hasValue.value ||\r\n    (hasStakedUnstakedLiquidity.value &&\r\n      Object.values(migrateStakeChooseArr.value).every(item => !item.value))\r\n  );\r\n});\r\n\r\nconst hasStakedUnstakedLiquidity = computed(() => {\r\n  return (\r\n    Number(fiatValueOfUnstakedShares.value) > 0 &&\r\n    Number(fiatValueOfStakedShares.value) > 0\r\n  );\r\n});\r\n\r\nconst isStakedMigrationEnabled = computed(() => {\r\n  if (hasStakedUnstakedLiquidity.value) {\r\n    return migrateStakeChooseArr.value.staked.value;\r\n  }\r\n\r\n  return Number(fiatValueOfStakedShares.value) > 0;\r\n});\r\n\r\nconst isUnstakedMigrationEnabled = computed(() => {\r\n  if (hasStakedUnstakedLiquidity.value) {\r\n    return migrateStakeChooseArr.value.unstaked.value;\r\n  }\r\n\r\n  return Number(fiatValueOfUnstakedShares.value) > 0;\r\n});\r\n</script>\r\n\r\n<template>\r\n  <BalCard shadow=\"xl\" exposeOverflow noBorder>\r\n    <template #header>\r\n      <div class=\"w-full\">\r\n        <div class=\"text-xs leading-none text-secondary\">\r\n          {{ configService.network.chainName }}\r\n        </div>\r\n        <div class=\"flex justify-between items-center\">\r\n          <h4>\r\n            {{ t(`migratePool.${poolMigrationInfo.type}.migrateToPool.title`) }}\r\n          </h4>\r\n          <SwapSettingsPopover :context=\"SwapSettingsContext.invest\" />\r\n        </div>\r\n      </div>\r\n    </template>\r\n    <div v-if=\"hasStakedUnstakedLiquidity\" class=\"pb-4\">\r\n      {{ t('migratePool.poolInfo.stakedUnstaked') }}\r\n      <BalCheckbox\r\n        v-for=\"(item, index) in Object.values(migrateStakeChooseArr)\"\r\n        :key=\"index\"\r\n        class=\"pt-3\"\r\n        :modelValue=\"item.value\"\r\n        name=\"areFeesGovernanceManaged\"\r\n        size=\"lg\"\r\n        noMargin\r\n        @update:model-value=\"item.value = !item.value\"\r\n      >\r\n        <template #label>\r\n          <div class=\"flex flex-col text-base\">\r\n            <div class=\"font-semibold\">\r\n              {{ item.title }}\r\n            </div>\r\n            <div class=\"text-sm font-normal text-secondary\">\r\n              {{ item.amount }}\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </BalCheckbox>\r\n    </div>\r\n    <div v-if=\"!hasStakedUnstakedLiquidity\" class=\"mb-6\">\r\n      <div class=\"text-gray-500\">{{ $t('yourBalanceInPool') }}</div>\r\n      <div class=\"text-lg font-semibold\">\r\n        {{ balanceLabel }}\r\n      </div>\r\n    </div>\r\n    <PoolInfoBreakdown :pool=\"fromPool\" :poolTokenInfo=\"fromPoolTokenInfo\" />\r\n    <div class=\"flex justify-center my-4 dark:text-gray-50\">\r\n      <ArrowDownIcon class=\"w-5 h-5 text-secondary\" />\r\n    </div>\r\n    <PoolInfoBreakdown :pool=\"toPool\" :poolTokenInfo=\"toPoolTokenInfo\" />\r\n    <BalBtn\r\n      color=\"gradient\"\r\n      class=\"mt-6\"\r\n      block\r\n      :disabled=\"isPreviewModalBtnDisabled\"\r\n      @click=\"showPreviewModal = true\"\r\n    >\r\n      {{ $t('previewMigrate') }}\r\n    </BalBtn>\r\n  </BalCard>\r\n\r\n  <teleport to=\"#modal\">\r\n    <MigratePreviewModal\r\n      v-if=\"showPreviewModal\"\r\n      :stakedPoolValue=\"fiatValueOfStakedShares\"\r\n      :unstakedPoolValue=\"fiatValueOfUnstakedShares\"\r\n      :isStakedMigrationEnabled=\"isStakedMigrationEnabled\"\r\n      :isUnstakedMigrationEnabled=\"isUnstakedMigrationEnabled\"\r\n      :stakedBptBalance=\"stakedShares\"\r\n      :unstakedBptBalance=\"unstakedBptBalance\"\r\n      :fromPool=\"fromPool\"\r\n      :toPool=\"toPool\"\r\n      :fromPoolTokenInfo=\"fromPoolTokenInfo\"\r\n      :toPoolTokenInfo=\"toPoolTokenInfo\"\r\n      :poolMigrationInfo=\"poolMigrationInfo\"\r\n      @close=\"showPreviewModal = false\"\r\n    />\r\n  </teleport>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed } from 'vue';\r\n\r\nimport { PoolMigrationInfo } from '@/components/forms/pool_actions/MigrateForm/types';\r\nimport APRTooltip from '@/components/tooltips/APRTooltip/APRTooltip.vue';\r\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\r\nimport { totalAprLabel } from '@/composables/usePool';\r\nimport { Pool } from '@/services/pool/types';\r\n\r\ntype Props = {\r\n  poolMigrationInfo: PoolMigrationInfo;\r\n  pool: Pool;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { fNum } = useNumbers();\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst aprLabel = computed((): string => {\r\n  const poolAPRs = props.pool?.apr;\r\n  if (!poolAPRs) return '0';\r\n\r\n  return totalAprLabel(poolAPRs, props.pool.boost);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <BalCard noPad shadow=\"none\">\r\n    <div class=\"p-4 w-full border-b dark:border-gray-900\">\r\n      <h6>\r\n        {{ $t(`migratePool.${poolMigrationInfo.type}.poolStats.title`) }}\r\n      </h6>\r\n    </div>\r\n    <div class=\"p-4\">\r\n      <div class=\"mb-3\">\r\n        <div class=\"text-sm text-secondary\">\r\n          {{ $t('poolValue') }}\r\n        </div>\r\n        <div class=\"font-semibold\">\r\n          {{ fNum(pool.totalLiquidity, FNumFormats.fiat) }}\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <div class=\"text-sm text-secondary\">\r\n          {{ $t('volumeTime', ['24h']) }}\r\n        </div>\r\n        <div class=\"font-semibold\">\r\n          {{ fNum(pool.volumeSnapshot || '0', FNumFormats.fiat) }}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"text-sm text-secondary\">\r\n          {{ $t('apr') }}\r\n        </div>\r\n        <div class=\"flex items-center font-semibold\">\r\n          {{ aprLabel }}\r\n          <APRTooltip :pool=\"pool\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </BalCard>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, toRefs } from 'vue';\r\n\r\nimport Col3Layout from '@/components/layouts/Col3Layout.vue';\r\nimport useRelayerApprovalTx from '@/composables/approvals/useRelayerApprovalTx';\r\nimport { useTokens } from '@/providers/tokens.provider';\r\nimport { Pool } from '@/services/pool/types';\r\n\r\nimport MigrateExplainer from './components/MigrateExplainer.vue';\r\nimport PoolsInfo from './components/PoolsInfo/PoolsInfo.vue';\r\nimport PoolStats from './components/PoolStats.vue';\r\nimport { PoolMigrationInfo } from './types';\r\nimport usePoolsQuery from '@/composables/queries/usePoolsQuery';\r\nimport { RelayerType } from '@/composables/approvals/useRelayerApproval';\r\n\r\ntype Props = {\r\n  poolMigrationInfo: PoolMigrationInfo;\r\n};\r\n\r\n/**\r\n * PROPS\r\n */\r\nconst props = defineProps<Props>();\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst { getToken } = useTokens();\r\n\r\n/**\r\n * QUERIES\r\n */\r\nconst { data: poolsResponse, isLoading: isLoadingPools } = usePoolsQuery(\r\n  ref([]),\r\n  {},\r\n  {\r\n    poolIds: ref([\r\n      props.poolMigrationInfo.fromPoolId,\r\n      props.poolMigrationInfo.toPoolId,\r\n    ]),\r\n  }\r\n);\r\n\r\nconst poolsData = computed(() => poolsResponse.value?.pages?.[0].pools);\r\n\r\nconst batchRelayerApproval = useRelayerApprovalTx(RelayerType.BATCH);\r\n\r\nconst { loading: batchRelayerApprovalLoading } = toRefs(batchRelayerApproval);\r\n\r\n/**\r\n * COMPUTED\r\n */\r\nconst fromPool = computed<Pool | undefined>(() =>\r\n  poolsData.value?.find(pool => pool.id === props.poolMigrationInfo.fromPoolId)\r\n);\r\n\r\nconst toPool = computed<Pool | undefined>(() =>\r\n  poolsData.value?.find(pool => pool.id === props.poolMigrationInfo.toPoolId)\r\n);\r\n\r\nconst fromPoolTokenInfo = computed(() =>\r\n  fromPool.value != null ? getToken(fromPool.value.address) : null\r\n);\r\n\r\nconst toPoolTokenInfo = computed(() =>\r\n  toPool.value != null ? getToken(toPool.value.address) : null\r\n);\r\n</script>\r\n\r\n<template>\r\n  <Col3Layout offsetGutters>\r\n    <template #gutterLeft>\r\n      <MigrateExplainer :poolMigrationInfo=\"poolMigrationInfo\" />\r\n    </template>\r\n    <BalLoadingBlock\r\n      v-if=\"\r\n        isLoadingPools ||\r\n        !fromPool ||\r\n        !toPool ||\r\n        fromPoolTokenInfo == null ||\r\n        toPoolTokenInfo == null ||\r\n        batchRelayerApprovalLoading\r\n      \"\r\n      class=\"h-96\"\r\n    />\r\n    <template v-else>\r\n      <PoolsInfo\r\n        :fromPool=\"fromPool\"\r\n        :toPool=\"toPool\"\r\n        :fromPoolTokenInfo=\"fromPoolTokenInfo\"\r\n        :toPoolTokenInfo=\"toPoolTokenInfo\"\r\n        :poolMigrationInfo=\"poolMigrationInfo\"\r\n      />\r\n    </template>\r\n\r\n    <template #gutterRight>\r\n      <BalLoadingBlock v-if=\"isLoadingPools || !toPool\" class=\"h-64\" />\r\n      <PoolStats v-else :pool=\"toPool\" :poolMigrationInfo=\"poolMigrationInfo\" />\r\n    </template>\r\n  </Col3Layout>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { useRoute } from 'vue-router';\r\n\r\nimport { POOL_MIGRATIONS } from '@/components/forms/pool_actions/MigrateForm/constants';\r\nimport MigrateForm from '@/components/forms/pool_actions/MigrateForm/MigrateForm.vue';\r\nimport { providePoolStaking } from '@/providers/local/pool-staking.provider';\r\n\r\n/**\r\n * COMPOSABLES\r\n */\r\nconst route = useRoute();\r\n\r\n/**\r\n * STATE\r\n */\r\nconst fromPoolId = route.params.from as string;\r\nconst toPoolId = route.params.to as string;\r\nconst poolMigrationInfo = POOL_MIGRATIONS.find(\r\n  poolMigrationInfo =>\r\n    poolMigrationInfo.fromPoolId === fromPoolId &&\r\n    poolMigrationInfo.toPoolId === toPoolId\r\n);\r\n\r\nprovidePoolStaking(fromPoolId);\r\n</script>\r\n\r\n<template>\r\n  <MigrateForm\r\n    v-if=\"poolMigrationInfo\"\r\n    :poolMigrationInfo=\"poolMigrationInfo\"\r\n  />\r\n  <div v-else class=\"text-center\">\r\n    <div class=\"text-lg font-semibold\">\r\n      {{ $t('migratePool.errorLoadingMigration.title') }}\r\n    </div>\r\n    <div>{{ $t('migratePool.errorLoadingMigration.description') }}</div>\r\n  </div>\r\n</template>\r\n"],"names":["isStabal3Migration","computed","props","PoolMigrationType","networkConfig","useConfig","explorerLinks","useWeb3","networkSlug","useNetwork","explorerLink","showOldVHint","_a","POOL_MIGRATIONS_MAP","usePoolMigration","stakedBptBalance","unstakedBptBalance","unstakedAmount","isUnstakedMigrationEnabled","stakedAmount","isStakedMigrationEnabled","fromPool","toPool","fromPoolTokenInfo","toPoolTokenInfo","relayerApproval","currentActionIndex","balancer","getBalancer","txListener","getTxConfirmedAt","useEthers","addTransaction","useTransactions","account","getSigner","t","useI18n","oneHourInMs","useTime","fNum","useNumbers","minusSlippageScaled","useSlippage","fetchPreferentialGaugeAddress","usePoolStaking","migratePoolState","ref","signature","stakedAction","migrate","parseUnits","unstakedAction","_b","signAction","getUserSignature","actions","arr","migrationType","POOL_MIGRATIONS","migration","migrationFn","migrateBoostedPool","migrateStabal3","migrateStables","migrateMaiUsd","migrationData","signer","signerAddress","_signature","_tokens","token","fromFiatTotal","fiatValueOf","fromFiatTotalLabel","FNumFormats","deadline","vaultInstance","balancerContractsService","nonce","relayerAddress","configService","calldata","RelayerAuthorization","encodedSign","error","amount","isStaked","query","expectedBptOut","getExpectedBptOut","minBptOut","tx","TransactionBuilder","handleTransaction","txResult","receipt","confirmedAt","dateTimeLabelFor","bptIn","staticResult","staked","fromData","toData","fromGaugeAddress","toGaugeAddress","tokensListExclBpt","toRefs","priceImpact","bptOut","bptOutLoading","highPriceImpactAccepted","useRelayerApprovalQuery","title","hasAcceptedHighPriceImpact","highPriceImpact","bnum","HIGH_PRICE_IMPACT","isInvestSummaryShown","isActionBtnDisabled","summaryTitle","evmStakedBptBalance","evmUnstakedBptBalance","toFiatTotal","bpt","formatUnits","handleClose","emit","setCurrentActionIndex","index","calcPriceImpact","calcBptOut","fromBptValue","toBptValue","value","watch","newIndex","isExpanded","getToken","useTokens","balanceFor","stakedShares","fiatValueOfStakedShares","fiatValueOfUnstakedShares","hasValue","balanceLabel","balance","showPreviewModal","migrateStakeChooseArr","isPreviewModalBtnDisabled","hasStakedUnstakedLiquidity","item","aprLabel","poolAPRs","totalAprLabel","poolsResponse","isLoadingPools","usePoolsQuery","poolsData","batchRelayerApproval","useRelayerApprovalTx","RelayerType","batchRelayerApprovalLoading","pool","route","useRoute","fromPoolId","toPoolId","poolMigrationInfo","poolMigrationInfo2","providePoolStaking"],"mappings":"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"}